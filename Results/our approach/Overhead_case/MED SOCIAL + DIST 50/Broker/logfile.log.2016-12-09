[INFO ][2016-12-09 07:19:35,681](CBroker.java:47) - ========================================================================================================
[INFO ][2016-12-09 07:19:35,681](CBroker.java:48) - ============================================= BROKER START =============================================
[INFO ][2016-12-09 07:19:35,681](CBroker.java:49) - ========================================================================================================

[INFO ][2016-12-09 07:19:35,696](CLPCalculation.java:413) - LP Thread is Running Now..
[INFO ][2016-12-09 07:19:35,696](CLPCalculation.java:24) - check the number of receiving monitored data 

[INFO ][2016-12-09 07:19:35,696](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 07:19:35,712](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 07:19:35,712](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 07:19:35,728](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 07:51:05,727](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 07:51:24,588](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 07:51:39,246](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 07:51:39,278](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 07:51:53,138](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 07:51:53,326](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 07:51:53,326](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 07:51:53,326](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 07:51:53,326](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 07:51:53,326](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 07:51:53,342](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 07:51:53,342](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 07:51:53,342](CInitPrevMatch.java:12) - Initialize previous match - start
[DEBUG][2016-12-09 07:51:53,342](CInitPrevMatch.java:32) - 	Number of users : 1056
[DEBUG][2016-12-09 07:51:53,342](CInitPrevMatch.java:33) - 	Previous match size : 1056
[DEBUG][2016-12-09 07:51:53,342](CInitPrevMatch.java:34) - Initialize previous match - end
[DEBUG][2016-12-09 07:51:53,482](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 07:52:38,581](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 07:52:38,581](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 07:52:38,581](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 07:52:38,596](CLPCalculation.java:106) - 	* number of user : 1056
[INFO ][2016-12-09 07:52:39,847](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 07:52:39,862](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 07:52:40,128](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 07:52:40,128](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 07:52:40,128](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 07:52:40,128](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 07:52:40,128](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 07:52:40,128](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 07:52:40,128](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 07:52:40,143](CLBCalculation.java:194) - 		* EP1 : 15379
[DEBUG][2016-12-09 07:52:40,143](CLBCalculation.java:194) - 		* EP2 : 64269
[DEBUG][2016-12-09 07:52:40,143](CLBCalculation.java:194) - 		* EP3 : 64352
[DEBUG][2016-12-09 07:52:40,143](CLBCalculation.java:197) - 		* server total traffic : 144000
[DEBUG][2016-12-09 07:52:40,159](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 07:52:40,159](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 07:52:40,159](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 07:52:40,159](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 07:52:40,159](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 07:52:40,159](CLBCalculation.java:497) - is First! (Medium)
[INFO ][2016-12-09 07:52:41,815](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 07:52:41,831](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:15379, (Expected Traffic:1986,) Remain Traffic:128014
[INFO ][2016-12-09 07:52:41,831](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:64352, (Expected Traffic:15793,) Remain Traffic:49207
[INFO ][2016-12-09 07:52:41,831](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:64269, (Expected Traffic:11042,) Remain Traffic:118958
[DEBUG][2016-12-09 07:52:41,847](CLBCalculation.java:423) - 	* there's no extracted users list
[INFO ][2016-12-09 07:52:41,847](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 07:52:41,847](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:15379, (Expected Traffic:1986,) Remain Traffic:128014
[INFO ][2016-12-09 07:52:41,862](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:64352, (Expected Traffic:15793,) Remain Traffic:49207
[INFO ][2016-12-09 07:52:41,862](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:64269, (Expected Traffic:11042,) Remain Traffic:118958
[INFO ][2016-12-09 07:52:41,878](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 07:52:41,878](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 07:52:41,894](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 07:52:41,909](CLBCalculation.java:1097) - 			EP1:180 EP2:791 EP3:1030 
[INFO ][2016-12-09 07:52:46,957](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 07:52:46,972](CLBCalculation.java:1152) - 			EP1:174 EP2:794 EP3:1033 
[INFO ][2016-12-09 07:52:46,972](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 07:52:47,332](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 07:52:47,332](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 07:52:47,347](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 07:52:47,347](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 07:52:47,347](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 07:52:47,363](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 08:51:06,394](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 08:51:25,943](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 08:51:35,944](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 08:51:35,960](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 08:51:54,775](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 08:51:54,931](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 08:51:54,931](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 08:51:54,931](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 08:51:54,931](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 08:51:54,931](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 08:51:54,931](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 08:51:54,931](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 08:51:55,103](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 08:52:34,467](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 08:52:34,467](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 08:52:34,482](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 08:52:34,482](CLPCalculation.java:106) - 	* number of user : 947
[INFO ][2016-12-09 08:52:35,498](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 08:52:35,498](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 08:52:35,685](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 08:52:35,685](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 08:52:35,685](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 08:52:35,685](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 08:52:35,685](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 08:52:35,685](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 08:52:35,701](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 08:52:35,701](CLBCalculation.java:194) - 		* EP1 : 14507
[DEBUG][2016-12-09 08:52:35,701](CLBCalculation.java:194) - 		* EP2 : 61761
[DEBUG][2016-12-09 08:52:35,716](CLBCalculation.java:194) - 		* EP3 : 60829
[DEBUG][2016-12-09 08:52:35,716](CLBCalculation.java:197) - 		* server total traffic : 137097
[DEBUG][2016-12-09 08:52:35,716](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 08:52:35,716](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 08:52:35,716](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 08:52:35,716](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 08:52:35,716](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 08:52:35,716](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 08:52:35,732](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 08:52:35,732](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 08:52:35,748](CLBCalculation.java:1097) - 			EP1:174 EP2:794 EP3:1033 
[DEBUG][2016-12-09 08:52:40,217](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 08:52:40,217](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 08:52:40,233](CLBCalculation.java:1152) - 			EP1:174 EP2:794 EP3:1033 
[INFO ][2016-12-09 08:52:40,233](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 08:52:40,686](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 08:52:40,701](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 08:52:40,701](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 08:52:40,701](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 08:52:40,717](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 08:52:40,717](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 09:51:07,280](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 09:51:29,017](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 09:51:36,330](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 09:51:36,346](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 09:51:56,254](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 09:51:56,411](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 09:51:56,411](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 09:51:56,411](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 09:51:56,426](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 09:51:56,426](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 09:51:56,426](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 09:51:56,426](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 09:51:56,614](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 09:52:39,447](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 09:52:39,447](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 09:52:39,462](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 09:52:39,462](CLPCalculation.java:106) - 	* number of user : 920
[INFO ][2016-12-09 09:52:40,447](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 09:52:40,447](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 09:52:40,634](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 09:52:40,634](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 09:52:40,634](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 09:52:40,634](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 09:52:40,634](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 09:52:40,634](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 09:52:40,634](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:194) - 		* EP1 : 13828
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:194) - 		* EP2 : 57501
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:194) - 		* EP3 : 57628
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:197) - 		* server total traffic : 128957
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 09:52:40,650](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 09:52:40,650](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 09:52:40,650](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 09:52:40,665](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 09:52:40,665](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 09:52:40,681](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 09:52:40,681](CLBCalculation.java:1097) - 			EP1:174 EP2:794 EP3:1033 
[DEBUG][2016-12-09 09:52:45,478](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 09:52:45,478](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 09:52:45,478](CLBCalculation.java:1152) - 			EP1:174 EP2:794 EP3:1033 
[INFO ][2016-12-09 09:52:45,494](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 09:52:45,807](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 09:52:45,807](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 09:52:45,822](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 09:52:45,822](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 09:52:45,822](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 09:52:45,838](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 10:51:08,370](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 10:51:32,950](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 10:51:40,701](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 10:51:40,733](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 10:51:58,359](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 10:51:58,531](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 10:51:58,531](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 10:51:58,531](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 10:51:58,531](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 10:51:58,531](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 10:51:58,594](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 10:51:58,594](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 10:51:58,735](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 10:52:40,723](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 10:52:40,723](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 10:52:40,723](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 10:52:40,739](CLPCalculation.java:106) - 	* number of user : 1017
[INFO ][2016-12-09 10:52:41,864](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 10:52:41,864](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 10:52:42,083](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 10:52:42,083](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 10:52:42,083](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 10:52:42,083](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 10:52:42,083](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 10:52:42,083](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 10:52:42,099](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 10:52:42,099](CLBCalculation.java:194) - 		* EP1 : 15029
[DEBUG][2016-12-09 10:52:42,099](CLBCalculation.java:194) - 		* EP2 : 62703
[DEBUG][2016-12-09 10:52:42,114](CLBCalculation.java:194) - 		* EP3 : 64609
[DEBUG][2016-12-09 10:52:42,114](CLBCalculation.java:197) - 		* server total traffic : 142341
[DEBUG][2016-12-09 10:52:42,114](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 10:52:42,114](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 10:52:42,114](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 10:52:42,114](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 10:52:42,114](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 10:52:42,114](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 10:52:42,130](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 10:52:42,130](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 10:52:42,145](CLBCalculation.java:1097) - 			EP1:174 EP2:794 EP3:1033 
[DEBUG][2016-12-09 10:52:46,411](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 10:52:46,411](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 10:52:46,427](CLBCalculation.java:1152) - 			EP1:174 EP2:794 EP3:1033 
[INFO ][2016-12-09 10:52:46,427](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 10:52:46,834](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 10:52:46,834](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 10:52:46,849](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 10:52:46,849](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 10:52:46,849](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 10:52:46,865](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 11:51:09,365](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 11:51:37,634](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 11:51:46,072](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 11:51:46,088](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 11:52:00,918](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 11:52:01,121](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 11:52:01,121](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 11:52:01,121](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 11:52:01,121](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 11:52:01,121](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 11:52:01,121](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 11:52:01,168](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 11:52:01,324](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 11:52:51,033](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 11:52:51,033](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 11:52:51,033](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 11:52:51,048](CLPCalculation.java:106) - 	* number of user : 1195
[INFO ][2016-12-09 11:52:52,376](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 11:52:52,376](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 11:52:52,673](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 11:52:52,673](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 11:52:52,673](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 11:52:52,673](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 11:52:52,673](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 11:52:52,673](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 11:52:52,673](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 11:52:52,689](CLBCalculation.java:194) - 		* EP1 : 17416
[DEBUG][2016-12-09 11:52:52,689](CLBCalculation.java:194) - 		* EP2 : 74463
[DEBUG][2016-12-09 11:52:52,704](CLBCalculation.java:194) - 		* EP3 : 77490
[DEBUG][2016-12-09 11:52:52,704](CLBCalculation.java:197) - 		* server total traffic : 169369
[DEBUG][2016-12-09 11:52:52,704](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 11:52:52,704](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 11:52:52,704](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 11:52:52,704](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 11:52:52,704](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 11:52:52,704](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 11:52:54,158](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 11:52:54,158](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:17416, (Expected Traffic:0,) Remain Traffic:112584
[INFO ][2016-12-09 11:52:54,158](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:77490, (Expected Traffic:0,) Remain Traffic:-12490
[INFO ][2016-12-09 11:52:54,173](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:74463, (Expected Traffic:0,) Remain Traffic:55537
[INFO ][2016-12-09 11:52:54,173](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:702) - 		surplusServerList.size() > 1
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:706) - 		* traffic type : * MEDIUM_TRAFFIC 

[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,173](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 11:52:54,189](CLBCalculation.java:721) - 		Priority 1. social + distance
[INFO ][2016-12-09 11:52:54,189](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 11:52:54,189](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 11:52:54,205](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:17416, (Expected Traffic:0,) Remain Traffic:112584
[INFO ][2016-12-09 11:52:54,205](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:77490, (Expected Traffic:0,) Remain Traffic:-12490
[INFO ][2016-12-09 11:52:54,220](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:74463, (Expected Traffic:0,) Remain Traffic:55537
[INFO ][2016-12-09 11:52:54,220](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 11:52:54,236](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 11:52:54,251](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 11:52:54,251](CLBCalculation.java:1097) - 			EP1:174 EP2:794 EP3:1033 
[DEBUG][2016-12-09 11:52:56,455](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GiuliBacchin, 3, 2
[DEBUG][2016-12-09 11:52:56,470](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deVereMalaysia, 3, 2
[DEBUG][2016-12-09 11:52:56,470](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gilngalamsyah, 3, 2
[DEBUG][2016-12-09 11:52:56,470](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Febriiyoga, 3, 2
[DEBUG][2016-12-09 11:52:56,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gloriakhj, 3, 2
[DEBUG][2016-12-09 11:52:56,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenStands, 3, 2
[DEBUG][2016-12-09 11:52:56,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenBeech22, 3, 2
[DEBUG][2016-12-09 11:52:56,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deb_staub, 3, 2
[DEBUG][2016-12-09 11:52:56,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BryanLucious, 3, 2
[DEBUG][2016-12-09 11:52:56,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DavidWoolley3, 3, 2
[DEBUG][2016-12-09 11:52:56,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllyDillsworth, 3, 2
[DEBUG][2016-12-09 11:52:56,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AimeeTay, 3, 2
[DEBUG][2016-12-09 11:52:56,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : echoedwalls, 3, 2
[DEBUG][2016-12-09 11:52:56,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aparna160, 3, 2
[DEBUG][2016-12-09 11:52:56,533](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cutee_sidharth, 3, 2
[DEBUG][2016-12-09 11:52:56,533](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Challyadds, 3, 2
[DEBUG][2016-12-09 11:52:56,533](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Doublelobe7, 3, 2
[DEBUG][2016-12-09 11:52:56,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmmaJ_XPP, 3, 2
[DEBUG][2016-12-09 11:52:56,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Arushi_Rawat, 3, 2
[DEBUG][2016-12-09 11:52:56,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dianejenflores, 3, 2
[DEBUG][2016-12-09 11:52:56,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bellgiunta, 3, 2
[DEBUG][2016-12-09 11:52:56,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DominosTaunton, 3, 2
[DEBUG][2016-12-09 11:52:56,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DisruptionAlert, 3, 2
[DEBUG][2016-12-09 11:52:56,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AntjevG, 3, 2
[DEBUG][2016-12-09 11:52:56,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bhrioni, 3, 2
[DEBUG][2016-12-09 11:52:56,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aubreeyyy, 3, 2
[DEBUG][2016-12-09 11:52:56,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AshaSociety, 3, 2
[DEBUG][2016-12-09 11:52:56,595](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dens_milly, 3, 2
[DEBUG][2016-12-09 11:52:56,595](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ekston, 3, 2
[DEBUG][2016-12-09 11:52:56,595](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Consumablessafe, 3, 2
[DEBUG][2016-12-09 11:52:56,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AutumnSansaver, 3, 2
[DEBUG][2016-12-09 11:52:56,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChefWithPen, 3, 2
[DEBUG][2016-12-09 11:52:56,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Geraldine_Julie, 3, 2
[DEBUG][2016-12-09 11:52:56,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DaveyOil, 3, 2
[DEBUG][2016-12-09 11:52:56,627](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gemamataa, 3, 2
[DEBUG][2016-12-09 11:52:56,627](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cindy_Nagel, 3, 2
[DEBUG][2016-12-09 11:52:56,627](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : barrycoltham, 3, 2
[DEBUG][2016-12-09 11:52:56,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Chemical_spirit, 3, 2
[DEBUG][2016-12-09 11:52:56,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fiddi, 3, 2
[DEBUG][2016-12-09 11:52:56,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : avoge21, 3, 2
[DEBUG][2016-12-09 11:52:56,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : craigmoses14, 3, 2
[DEBUG][2016-12-09 11:52:56,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : babpreetika, 3, 2
[DEBUG][2016-12-09 11:52:56,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bary__meth, 3, 2
[DEBUG][2016-12-09 11:52:56,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 123KatC, 3, 2
[DEBUG][2016-12-09 11:52:56,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : foolhardyGames, 3, 2
[DEBUG][2016-12-09 11:52:56,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cncfeed, 3, 2
[DEBUG][2016-12-09 11:52:56,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 73Huntingdonsqn, 3, 2
[DEBUG][2016-12-09 11:52:56,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CharlieCaslick, 3, 2
[DEBUG][2016-12-09 11:52:56,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Assassin_115, 3, 2
[DEBUG][2016-12-09 11:52:56,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ASFInfra, 3, 2
[DEBUG][2016-12-09 11:52:56,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : asmidgin, 3, 2
[DEBUG][2016-12-09 11:52:56,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GavinTanner, 3, 2
[DEBUG][2016-12-09 11:52:56,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FrostfireAudio, 3, 2
[DEBUG][2016-12-09 11:52:56,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Abu_Kigab23, 3, 2
[DEBUG][2016-12-09 11:52:56,720](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BruneParkSchool, 3, 2
[DEBUG][2016-12-09 11:52:56,720](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : area_maha, 3, 2
[DEBUG][2016-12-09 11:52:56,720](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : d4v3g, 3, 2
[DEBUG][2016-12-09 11:52:56,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brusomogyi, 3, 2
[DEBUG][2016-12-09 11:52:56,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aka_delboy, 3, 2
[DEBUG][2016-12-09 11:52:56,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cuteri22, 3, 2
[DEBUG][2016-12-09 11:52:56,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bladrcntrl101, 3, 2
[DEBUG][2016-12-09 11:52:56,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DexterLabP, 3, 2
[DEBUG][2016-12-09 11:52:56,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : franklychilli, 3, 2
[DEBUG][2016-12-09 11:52:56,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alexarungah, 3, 2
[DEBUG][2016-12-09 11:52:56,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bsitwesley, 3, 2
[DEBUG][2016-12-09 11:52:56,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : comtelza, 3, 2
[DEBUG][2016-12-09 11:52:56,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Antydogmatyk, 3, 2
[DEBUG][2016-12-09 11:52:56,783](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : coachbmcknight, 3, 2
[DEBUG][2016-12-09 11:52:56,783](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FelgenTweets, 3, 2
[DEBUG][2016-12-09 11:52:56,783](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarberryMedia, 3, 2
[DEBUG][2016-12-09 11:52:56,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chatellucile, 3, 2
[DEBUG][2016-12-09 11:52:56,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ExpatGenius, 3, 2
[DEBUG][2016-12-09 11:52:56,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aswin8783, 3, 2
[DEBUG][2016-12-09 11:52:56,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : flaniel, 3, 2
[DEBUG][2016-12-09 11:52:56,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bisongruppe, 3, 2
[DEBUG][2016-12-09 11:52:56,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anyanildefonso, 3, 2
[DEBUG][2016-12-09 11:52:56,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cha_lcs, 3, 2
[DEBUG][2016-12-09 11:52:56,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Blattahali, 3, 2
[DEBUG][2016-12-09 11:52:56,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AngeliMarcline, 3, 2
[DEBUG][2016-12-09 11:52:56,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 13DiYaNkA, 3, 2
[DEBUG][2016-12-09 11:52:56,845](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eKamineth, 3, 2
[DEBUG][2016-12-09 11:52:56,845](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DanielMallia, 3, 2
[DEBUG][2016-12-09 11:52:56,845](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : edennigeria, 3, 2
[DEBUG][2016-12-09 11:52:56,845](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndruwWittels, 3, 2
[DEBUG][2016-12-09 11:52:56,861](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : corentinandrea, 3, 2
[DEBUG][2016-12-09 11:52:56,861](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : easybuilder_in, 3, 2
[DEBUG][2016-12-09 11:52:56,861](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CandieW, 3, 2
[DEBUG][2016-12-09 11:52:56,877](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : austinm124, 3, 2
[DEBUG][2016-12-09 11:52:56,877](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BradRigoulot, 3, 2
[DEBUG][2016-12-09 11:52:56,877](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Glydetime_, 3, 2
[DEBUG][2016-12-09 11:52:56,892](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BaconRules123, 3, 2
[DEBUG][2016-12-09 11:52:56,892](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : beesleys1, 3, 2
[DEBUG][2016-12-09 11:52:56,892](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GeorScandalo, 3, 2
[DEBUG][2016-12-09 11:52:56,908](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DelhiNoidaProp, 3, 2
[DEBUG][2016-12-09 11:52:56,908](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CharlvdMerwe, 3, 2
[DEBUG][2016-12-09 11:52:56,908](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ericksirali, 3, 2
[DEBUG][2016-12-09 11:52:56,908](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abhaynawani, 3, 2
[DEBUG][2016-12-09 11:52:56,924](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Degrazy, 3, 2
[DEBUG][2016-12-09 11:52:56,924](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dinashawar, 3, 2
[DEBUG][2016-12-09 11:52:56,924](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Film_diSpencer, 3, 2
[DEBUG][2016-12-09 11:52:56,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cdean18, 3, 2
[DEBUG][2016-12-09 11:52:56,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fawnderful, 3, 2
[DEBUG][2016-12-09 11:52:56,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BHPTeam, 3, 2
[DEBUG][2016-12-09 11:52:56,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : andrevsb, 3, 2
[DEBUG][2016-12-09 11:52:56,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alberti47136988, 3, 2
[DEBUG][2016-12-09 11:52:56,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : agvthe, 3, 2
[DEBUG][2016-12-09 11:52:56,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DawnBlackRose, 3, 2
[DEBUG][2016-12-09 11:52:56,971](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ben_batt, 3, 2
[DEBUG][2016-12-09 11:52:56,971](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Emily_Mowder, 3, 2
[DEBUG][2016-12-09 11:52:56,971](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GeorgeManiereg, 3, 2
[DEBUG][2016-12-09 11:52:56,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ColynePapin, 3, 2
[DEBUG][2016-12-09 11:52:56,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emehesz8, 3, 2
[DEBUG][2016-12-09 11:52:56,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 8dfb4f5d646346b, 3, 2
[DEBUG][2016-12-09 11:52:57,002](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chrisketels, 3, 2
[DEBUG][2016-12-09 11:52:57,002](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : agrarealestate, 3, 2
[DEBUG][2016-12-09 11:52:57,002](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AplisoSA, 3, 2
[DEBUG][2016-12-09 11:52:57,002](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : connoc23, 3, 2
[DEBUG][2016-12-09 11:52:57,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : antarcticdinos, 3, 2
[DEBUG][2016-12-09 11:52:57,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : enzoflocchini, 3, 2
[DEBUG][2016-12-09 11:52:57,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : a_paranjpye, 3, 2
[DEBUG][2016-12-09 11:52:57,033](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : caileydanielle, 3, 2
[DEBUG][2016-12-09 11:52:57,033](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CARLABsocial, 3, 2
[DEBUG][2016-12-09 11:52:57,033](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : charlottemlld, 3, 2
[DEBUG][2016-12-09 11:52:57,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cri_tique, 3, 2
[DEBUG][2016-12-09 11:52:57,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CasperDeWinter, 3, 2
[DEBUG][2016-12-09 11:52:57,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DimeStudios, 3, 2
[DEBUG][2016-12-09 11:52:57,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaBen, 3, 2
[DEBUG][2016-12-09 11:52:57,064](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 02SarahM, 3, 2
[DEBUG][2016-12-09 11:52:57,064](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Devon_Digital, 3, 2
[DEBUG][2016-12-09 11:52:57,064](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ester_jvita, 3, 2
[DEBUG][2016-12-09 11:52:57,080](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AyeeeYouu, 3, 2
[DEBUG][2016-12-09 11:52:57,080](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CrestronInt_MKT, 3, 2
[DEBUG][2016-12-09 11:52:57,080](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GarciaSharra, 3, 2
[DEBUG][2016-12-09 11:52:57,095](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bonganinhlapo17, 3, 2
[DEBUG][2016-12-09 11:52:57,095](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : duncanmbodze2, 3, 2
[DEBUG][2016-12-09 11:52:57,095](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bonescosey, 3, 2
[DEBUG][2016-12-09 11:52:57,095](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BonnieeKiedis, 3, 2
[DEBUG][2016-12-09 11:52:57,111](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deepikadharnaik, 3, 2
[DEBUG][2016-12-09 11:52:57,111](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Alex_06, 3, 2
[DEBUG][2016-12-09 11:52:57,111](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ElsieMbatha, 3, 2
[DEBUG][2016-12-09 11:52:57,127](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmilySimmonds93, 3, 2
[DEBUG][2016-12-09 11:52:57,127](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : a_sis62, 3, 2
[DEBUG][2016-12-09 11:52:57,127](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BYZAUC, 3, 2
[DEBUG][2016-12-09 11:52:57,142](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bkipande, 3, 2
[DEBUG][2016-12-09 11:52:57,142](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BradTurville, 3, 2
[DEBUG][2016-12-09 11:52:57,142](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bikerushownzz, 3, 2
[DEBUG][2016-12-09 11:52:57,142](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ganeshdeals, 3, 2
[DEBUG][2016-12-09 11:52:57,158](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GameDevsofWelly, 3, 2
[DEBUG][2016-12-09 11:52:57,158](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : annmwonjo, 3, 2
[DEBUG][2016-12-09 11:52:57,158](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ashhhhtonx, 3, 2
[DEBUG][2016-12-09 11:52:57,174](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abbeymclennon, 3, 2
[DEBUG][2016-12-09 11:52:57,174](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ashleydalopz, 3, 2
[DEBUG][2016-12-09 11:52:57,174](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : asydrayn, 3, 2
[DEBUG][2016-12-09 11:52:57,189](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AWilsoonn, 3, 2
[DEBUG][2016-12-09 11:52:57,189](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : djitallkenya, 3, 2
[DEBUG][2016-12-09 11:52:57,189](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AtorSeri, 3, 2
[DEBUG][2016-12-09 11:52:57,189](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DonBaney111, 3, 2
[DEBUG][2016-12-09 11:52:57,205](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Flvckxo22, 3, 2
[DEBUG][2016-12-09 11:52:57,205](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Benoit_Lavier, 3, 2
[DEBUG][2016-12-09 11:52:57,205](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DripDropSA, 3, 2
[DEBUG][2016-12-09 11:52:57,220](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AranoKj, 3, 2
[DEBUG][2016-12-09 11:52:57,220](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CJSTrey35, 3, 2
[DEBUG][2016-12-09 11:52:57,220](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abdullah_dawnak, 3, 2
[DEBUG][2016-12-09 11:52:57,236](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Engi9e, 3, 2
[DEBUG][2016-12-09 11:52:57,236](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ellencollardmyp, 3, 2
[DEBUG][2016-12-09 11:52:57,236](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 0a3430129c1b4f5, 3, 2
[DEBUG][2016-12-09 11:52:57,236](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aayah6688, 3, 2
[DEBUG][2016-12-09 11:52:57,252](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : arichards75, 3, 2
[DEBUG][2016-12-09 11:52:57,252](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : asdavis_, 3, 2
[DEBUG][2016-12-09 11:52:57,252](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChillieChill, 3, 2
[DEBUG][2016-12-09 11:52:57,267](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DeboraMykoluk, 3, 2
[DEBUG][2016-12-09 11:52:57,267](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BananaSalazar, 3, 2
[DEBUG][2016-12-09 11:52:57,267](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DoranSummers, 3, 2
[DEBUG][2016-12-09 11:52:57,283](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : d13locker, 3, 2
[DEBUG][2016-12-09 11:52:57,283](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : furkantomasoglu, 3, 2
[DEBUG][2016-12-09 11:52:57,283](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Giselasumarauw, 3, 2
[DEBUG][2016-12-09 11:52:57,283](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlyshaBadour, 3, 2
[DEBUG][2016-12-09 11:52:57,299](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : becca_xpp, 3, 2
[DEBUG][2016-12-09 11:52:57,299](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : daviddring, 3, 2
[DEBUG][2016-12-09 11:52:57,299](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : areagujarat, 3, 2
[DEBUG][2016-12-09 11:52:57,314](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ale0099, 3, 2
[DEBUG][2016-12-09 11:52:57,314](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Da_SNUMack369, 3, 2
[DEBUG][2016-12-09 11:52:57,314](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 3Four_Prod, 3, 2
[DEBUG][2016-12-09 11:52:57,330](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChelseyTLowe, 3, 2
[DEBUG][2016-12-09 11:52:57,330](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ckirmizitas, 3, 2
[DEBUG][2016-12-09 11:52:57,330](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ericamendevil, 3, 2
[DEBUG][2016-12-09 11:52:57,330](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : andysatnz, 3, 2
[DEBUG][2016-12-09 11:52:57,345](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dp_mindoktor, 3, 2
[DEBUG][2016-12-09 11:52:57,345](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : colonelkerning, 3, 2
[DEBUG][2016-12-09 11:52:57,345](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : freeseDreams, 3, 2
[DEBUG][2016-12-09 11:52:57,361](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 999haunts, 3, 2
[DEBUG][2016-12-09 11:52:57,361](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ahvenaisesi, 3, 2
[DEBUG][2016-12-09 11:52:57,361](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CaswalP, 3, 2
[DEBUG][2016-12-09 11:52:57,377](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CherrelJacobs, 3, 2
[DEBUG][2016-12-09 11:52:57,377](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DAYOCONNOLLY, 3, 2
[DEBUG][2016-12-09 11:52:57,377](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : crystalheart31, 3, 2
[DEBUG][2016-12-09 11:52:57,377](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FlatRoofManor, 3, 2
[DEBUG][2016-12-09 11:52:57,392](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Genmathenge3, 3, 2
[DEBUG][2016-12-09 11:52:57,392](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Coren_Tin, 3, 2
[DEBUG][2016-12-09 11:52:57,392](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AliAliroper612, 3, 2
[DEBUG][2016-12-09 11:52:57,408](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : benregez, 3, 2
[DEBUG][2016-12-09 11:52:57,408](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dtadgh, 3, 2
[DEBUG][2016-12-09 11:52:57,408](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : funkyfield, 3, 2
[DEBUG][2016-12-09 11:52:57,424](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deepitome2015, 3, 2
[DEBUG][2016-12-09 11:52:57,424](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dmoses90, 3, 2
[DEBUG][2016-12-09 11:52:57,424](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DSPCSUSB, 3, 2
[DEBUG][2016-12-09 11:52:57,424](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndreasLebihan, 3, 2
[DEBUG][2016-12-09 11:52:57,439](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Alexis_Groht, 3, 2
[DEBUG][2016-12-09 11:52:57,439](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnandamTV, 3, 2
[DEBUG][2016-12-09 11:52:57,439](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cjohndeakin, 3, 2
[DEBUG][2016-12-09 11:52:57,455](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DetroitComics, 3, 2
[DEBUG][2016-12-09 11:52:57,455](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BerteroSindaco, 3, 2
[DEBUG][2016-12-09 11:52:57,455](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cell_met, 3, 2
[DEBUG][2016-12-09 11:52:57,471](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ajoycecasas, 3, 2
[DEBUG][2016-12-09 11:52:57,471](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : APLMaria, 3, 2
[DEBUG][2016-12-09 11:52:57,471](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DrCurlytek, 3, 2
[DEBUG][2016-12-09 11:52:57,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ForciPafo, 3, 2
[DEBUG][2016-12-09 11:52:57,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrianaBQuinn, 3, 2
[DEBUG][2016-12-09 11:52:57,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : glenglet, 3, 2
[DEBUG][2016-12-09 11:52:57,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AppsterTeam, 3, 2
[DEBUG][2016-12-09 11:52:57,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anggersatya, 3, 2
[DEBUG][2016-12-09 11:52:59,174](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 221
[INFO ][2016-12-09 11:52:59,174](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 11:52:59,189](CLBCalculation.java:1152) - 			EP1:174 EP2:1015 EP3:812 
[INFO ][2016-12-09 11:52:59,189](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 11:52:59,580](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 11:52:59,580](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 11:52:59,596](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 11:52:59,596](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 11:52:59,611](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 11:52:59,611](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 12:51:10,923](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 12:51:42,536](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 12:52:00,429](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 12:52:00,507](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 12:52:03,991](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 12:52:04,210](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 12:52:04,210](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 12:52:04,210](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 12:52:04,210](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 12:52:04,210](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 12:52:04,210](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 12:52:04,210](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 12:52:04,382](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 12:53:07,920](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 12:53:07,920](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 12:53:07,936](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 12:53:07,936](CLPCalculation.java:106) - 	* number of user : 1432
[INFO ][2016-12-09 12:53:09,905](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 12:53:09,905](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 12:53:10,327](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 12:53:10,327](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 12:53:10,327](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 12:53:10,327](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 12:53:10,327](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 12:53:10,327](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 12:53:10,327](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 12:53:10,342](CLBCalculation.java:194) - 		* EP1 : 20755
[DEBUG][2016-12-09 12:53:10,342](CLBCalculation.java:194) - 		* EP2 : 110181
[DEBUG][2016-12-09 12:53:10,342](CLBCalculation.java:194) - 		* EP3 : 75777
[DEBUG][2016-12-09 12:53:10,358](CLBCalculation.java:197) - 		* server total traffic : 206713
[DEBUG][2016-12-09 12:53:10,358](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 12:53:10,358](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 12:53:10,358](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 12:53:10,358](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 12:53:10,358](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 12:53:10,358](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 12:53:11,827](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 12:53:11,827](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:20755, (Expected Traffic:0,) Remain Traffic:109245
[INFO ][2016-12-09 12:53:11,842](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:75777, (Expected Traffic:0,) Remain Traffic:-10777
[INFO ][2016-12-09 12:53:11,842](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:110181, (Expected Traffic:0,) Remain Traffic:19819
[INFO ][2016-12-09 12:53:11,858](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:702) - 		surplusServerList.size() > 1
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:706) - 		* traffic type : * MEDIUM_TRAFFIC 

[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,858](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 12:53:11,874](CLBCalculation.java:721) - 		Priority 1. social + distance
[INFO ][2016-12-09 12:53:11,874](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 12:53:11,874](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 12:53:11,889](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:20755, (Expected Traffic:0,) Remain Traffic:109245
[INFO ][2016-12-09 12:53:11,889](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:75777, (Expected Traffic:0,) Remain Traffic:-10777
[INFO ][2016-12-09 12:53:11,905](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:110181, (Expected Traffic:0,) Remain Traffic:19819
[INFO ][2016-12-09 12:53:11,905](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 12:53:11,905](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 12:53:11,921](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 12:53:11,936](CLBCalculation.java:1097) - 			EP1:174 EP2:1015 EP3:812 
[DEBUG][2016-12-09 12:53:15,171](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eusou7a, 3, 2
[DEBUG][2016-12-09 12:53:15,171](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 01BlackRose08, 3, 2
[DEBUG][2016-12-09 12:53:15,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : akumu_stephen, 3, 2
[DEBUG][2016-12-09 12:53:15,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ce6874, 3, 2
[DEBUG][2016-12-09 12:53:15,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BigT_90, 3, 2
[DEBUG][2016-12-09 12:53:15,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DaveMAdams, 3, 2
[DEBUG][2016-12-09 12:53:15,202](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FDeLucia, 3, 2
[DEBUG][2016-12-09 12:53:15,202](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DaseinUltimate, 3, 2
[DEBUG][2016-12-09 12:53:15,202](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dchistorydept, 3, 2
[DEBUG][2016-12-09 12:53:15,218](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllisonJ5, 3, 2
[DEBUG][2016-12-09 12:53:15,218](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : capasul, 3, 2
[DEBUG][2016-12-09 12:53:15,218](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : babyyjohnnie, 3, 2
[DEBUG][2016-12-09 12:53:15,233](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anyonaalex, 3, 2
[DEBUG][2016-12-09 12:53:15,233](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Crevy_Evy, 3, 2
[DEBUG][2016-12-09 12:53:15,233](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Avdeshzameen, 3, 2
[DEBUG][2016-12-09 12:53:15,233](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bokeh88, 3, 2
[DEBUG][2016-12-09 12:53:15,249](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DeathOverDecaf, 3, 2
[DEBUG][2016-12-09 12:53:15,249](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ehdzxcvbnm, 3, 2
[DEBUG][2016-12-09 12:53:15,249](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BKichinko65, 3, 2
[DEBUG][2016-12-09 12:53:15,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CapsLockSam, 3, 2
[DEBUG][2016-12-09 12:53:15,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ELODIE12345678, 3, 2
[DEBUG][2016-12-09 12:53:15,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dallas22texas, 3, 2
[DEBUG][2016-12-09 12:53:15,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AdityaSambuaga, 3, 2
[DEBUG][2016-12-09 12:53:15,280](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmilyFiggis, 3, 2
[DEBUG][2016-12-09 12:53:15,280](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : avkashchauhan, 3, 2
[DEBUG][2016-12-09 12:53:15,280](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : benoitcorbel, 3, 2
[DEBUG][2016-12-09 12:53:15,296](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BWalloch, 3, 2
[DEBUG][2016-12-09 12:53:15,296](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DerekCompeau, 3, 2
[DEBUG][2016-12-09 12:53:15,296](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : blockpocalypse, 3, 2
[DEBUG][2016-12-09 12:53:15,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Angelica_werung, 3, 2
[DEBUG][2016-12-09 12:53:15,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Edo_DAle, 3, 2
[DEBUG][2016-12-09 12:53:15,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : agvthv, 3, 2
[DEBUG][2016-12-09 12:53:15,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Axelpult, 3, 2
[DEBUG][2016-12-09 12:53:15,327](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CBGphotos, 3, 2
[DEBUG][2016-12-09 12:53:15,327](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emosbargo1, 3, 2
[DEBUG][2016-12-09 12:53:15,327](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DJAFothergill, 3, 2
[DEBUG][2016-12-09 12:53:15,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : giantblackdog, 3, 2
[DEBUG][2016-12-09 12:53:15,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alex_gnoza, 3, 2
[DEBUG][2016-12-09 12:53:15,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fairygodmomma, 3, 2
[DEBUG][2016-12-09 12:53:15,358](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anshuman_x, 3, 2
[DEBUG][2016-12-09 12:53:15,358](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DeviBrigard, 3, 2
[DEBUG][2016-12-09 12:53:15,358](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fosisnorth, 3, 2
[DEBUG][2016-12-09 12:53:15,374](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : basicallyklynn, 3, 2
[DEBUG][2016-12-09 12:53:15,374](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GaurikaBrijwal, 3, 2
[DEBUG][2016-12-09 12:53:15,374](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : docligot, 3, 2
[DEBUG][2016-12-09 12:53:15,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ebrahiem_adams, 3, 2
[DEBUG][2016-12-09 12:53:15,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FiveFoldIreland, 3, 2
[DEBUG][2016-12-09 12:53:15,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amalthya, 3, 2
[DEBUG][2016-12-09 12:53:15,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ClaireyFiler, 3, 2
[DEBUG][2016-12-09 12:53:15,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Estherbrt, 3, 2
[DEBUG][2016-12-09 12:53:15,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fa1zaI, 3, 2
[DEBUG][2016-12-09 12:53:15,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : absarokaa_wyo, 3, 2
[DEBUG][2016-12-09 12:53:15,421](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ejm3d, 3, 2
[DEBUG][2016-12-09 12:53:15,421](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GiantRobotKillr, 3, 2
[DEBUG][2016-12-09 12:53:15,421](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chreko, 3, 2
[DEBUG][2016-12-09 12:53:15,437](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aaronhiles, 3, 2
[DEBUG][2016-12-09 12:53:15,437](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alikennedy_, 3, 2
[DEBUG][2016-12-09 12:53:15,437](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Anja66T, 3, 2
[DEBUG][2016-12-09 12:53:15,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Erelcaroline, 3, 2
[DEBUG][2016-12-09 12:53:15,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : diegomontes16, 3, 2
[DEBUG][2016-12-09 12:53:15,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aahana_dhar, 3, 2
[DEBUG][2016-12-09 12:53:15,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarlyBlanchett, 3, 2
[DEBUG][2016-12-09 12:53:15,468](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenRoberts07, 3, 2
[DEBUG][2016-12-09 12:53:15,468](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : G0ATSHRINE, 3, 2
[DEBUG][2016-12-09 12:53:15,468](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AshesRse, 3, 2
[DEBUG][2016-12-09 12:53:15,483](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : esquire_mike, 3, 2
[DEBUG][2016-12-09 12:53:15,483](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CatherineKing10, 3, 2
[DEBUG][2016-12-09 12:53:15,483](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BahadirDurak, 3, 2
[DEBUG][2016-12-09 12:53:15,499](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Blk_Mamba20, 3, 2
[DEBUG][2016-12-09 12:53:15,499](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BuiltbyFlaws, 3, 2
[DEBUG][2016-12-09 12:53:15,499](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AshleyTryba, 3, 2
[DEBUG][2016-12-09 12:53:15,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DeviTenges, 3, 2
[DEBUG][2016-12-09 12:53:15,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BuyFilipino, 3, 2
[DEBUG][2016-12-09 12:53:15,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : faabs_322, 3, 2
[DEBUG][2016-12-09 12:53:15,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ColdironCassie, 3, 2
[DEBUG][2016-12-09 12:53:15,530](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : baptistebonnef1, 3, 2
[DEBUG][2016-12-09 12:53:15,530](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BCastellier, 3, 2
[DEBUG][2016-12-09 12:53:15,530](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DublinVipers, 3, 2
[DEBUG][2016-12-09 12:53:15,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GameMakingNews, 3, 2
[DEBUG][2016-12-09 12:53:15,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : britishteal, 3, 2
[DEBUG][2016-12-09 12:53:15,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Bridgenti, 3, 2
[DEBUG][2016-12-09 12:53:15,562](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ArchieGameDev, 3, 2
[DEBUG][2016-12-09 12:53:15,562](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DocRickMarsha1, 3, 2
[DEBUG][2016-12-09 12:53:15,562](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : annmurdesign, 3, 2
[DEBUG][2016-12-09 12:53:15,577](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EastJesusArt, 3, 2
[DEBUG][2016-12-09 12:53:15,577](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AbiReimold, 3, 2
[DEBUG][2016-12-09 12:53:15,577](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aiyananana, 3, 2
[DEBUG][2016-12-09 12:53:15,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emleebakes, 3, 2
[DEBUG][2016-12-09 12:53:15,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GAlNSBOROUGH, 3, 2
[DEBUG][2016-12-09 12:53:15,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ejiigwuonyi, 3, 2
[DEBUG][2016-12-09 12:53:15,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alainveuve, 3, 2
[DEBUG][2016-12-09 12:53:15,608](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : digitalmaximal, 3, 2
[DEBUG][2016-12-09 12:53:15,608](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Drobnjak_IzAuta, 3, 2
[DEBUG][2016-12-09 12:53:15,608](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CountyGazetteEd, 3, 2
[DEBUG][2016-12-09 12:53:15,624](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bjornerix, 3, 2
[DEBUG][2016-12-09 12:53:15,624](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChrissyFromPDX, 3, 2
[DEBUG][2016-12-09 12:53:15,624](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bob_woodburn, 3, 2
[DEBUG][2016-12-09 12:53:15,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chemonye, 3, 2
[DEBUG][2016-12-09 12:53:15,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Chikkymo, 3, 2
[DEBUG][2016-12-09 12:53:15,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : albertzace, 3, 2
[DEBUG][2016-12-09 12:53:15,655](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DomPRaven, 3, 2
[DEBUG][2016-12-09 12:53:15,655](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmmaLederer, 3, 2
[DEBUG][2016-12-09 12:53:15,655](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : derekalvarado50, 3, 2
[DEBUG][2016-12-09 12:53:15,671](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dallasx06, 3, 2
[DEBUG][2016-12-09 12:53:15,671](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emmacreasytime, 3, 2
[DEBUG][2016-12-09 12:53:15,671](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aniatarazi, 3, 2
[DEBUG][2016-12-09 12:53:15,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CoachClive10, 3, 2
[DEBUG][2016-12-09 12:53:15,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Brigi68, 3, 2
[DEBUG][2016-12-09 12:53:15,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : davidjunge, 3, 2
[DEBUG][2016-12-09 12:53:15,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : driesDP, 3, 2
[DEBUG][2016-12-09 12:53:15,702](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : crowdedworlds, 3, 2
[DEBUG][2016-12-09 12:53:15,702](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Freestyle_ZiNeZ, 3, 2
[DEBUG][2016-12-09 12:53:15,702](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ATHENA_RESE, 3, 2
[DEBUG][2016-12-09 12:53:15,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GASTWESOsmanlee, 3, 2
[DEBUG][2016-12-09 12:53:15,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : connor_reddy, 3, 2
[DEBUG][2016-12-09 12:53:15,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gibbbaayyy, 3, 2
[DEBUG][2016-12-09 12:53:15,733](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : blake_raven, 3, 2
[DEBUG][2016-12-09 12:53:15,733](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BaidManisha, 3, 2
[DEBUG][2016-12-09 12:53:15,733](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cardellw, 3, 2
[DEBUG][2016-12-09 12:53:15,749](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DianneYanda, 3, 2
[DEBUG][2016-12-09 12:53:15,749](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CraigPeebles, 3, 2
[DEBUG][2016-12-09 12:53:15,749](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cen_health, 3, 2
[DEBUG][2016-12-09 12:53:15,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deste24, 3, 2
[DEBUG][2016-12-09 12:53:15,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Eduardo_J_Gomez, 3, 2
[DEBUG][2016-12-09 12:53:15,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlombossChollo, 3, 2
[DEBUG][2016-12-09 12:53:15,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : atomspark1618, 3, 2
[DEBUG][2016-12-09 12:53:15,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DJTyga_SA, 3, 2
[DEBUG][2016-12-09 12:53:15,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : andyrtd, 3, 2
[DEBUG][2016-12-09 12:53:15,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : adomidom, 3, 2
[DEBUG][2016-12-09 12:53:15,796](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BRNSRS, 3, 2
[DEBUG][2016-12-09 12:53:15,796](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dearshakti, 3, 2
[DEBUG][2016-12-09 12:53:15,796](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Colourworks_ZA, 3, 2
[DEBUG][2016-12-09 12:53:15,812](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bseabolt33, 3, 2
[DEBUG][2016-12-09 12:53:15,812](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dianaaavee, 3, 2
[DEBUG][2016-12-09 12:53:15,812](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CouncilOfFools, 3, 2
[DEBUG][2016-12-09 12:53:15,827](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amuse_kelly, 3, 2
[DEBUG][2016-12-09 12:53:15,827](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : david_macmurchy, 3, 2
[DEBUG][2016-12-09 12:53:15,827](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EssaH52, 3, 2
[DEBUG][2016-12-09 12:53:15,843](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DMarketHall, 3, 2
[DEBUG][2016-12-09 12:53:15,843](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Gauthierlb_, 3, 2
[DEBUG][2016-12-09 12:53:15,843](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FaniMutiaraa, 3, 2
[DEBUG][2016-12-09 12:53:15,859](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fckyesmichelle, 3, 2
[DEBUG][2016-12-09 12:53:15,859](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ColtonFritts, 3, 2
[DEBUG][2016-12-09 12:53:15,859](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EdBiden, 3, 2
[DEBUG][2016-12-09 12:53:15,859](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : binaryworker, 3, 2
[DEBUG][2016-12-09 12:53:15,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ayushmankuriyal, 3, 2
[DEBUG][2016-12-09 12:53:15,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CRissaGK, 3, 2
[DEBUG][2016-12-09 12:53:15,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CiaMundung, 3, 2
[DEBUG][2016-12-09 12:53:15,890](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : efirenzaputra, 3, 2
[DEBUG][2016-12-09 12:53:15,890](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : andrewsargeant, 3, 2
[DEBUG][2016-12-09 12:53:15,890](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AriRich7, 3, 2
[DEBUG][2016-12-09 12:53:15,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cncownersoff, 3, 2
[DEBUG][2016-12-09 12:53:15,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EllaUndercover, 3, 2
[DEBUG][2016-12-09 12:53:15,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : duane_08, 3, 2
[DEBUG][2016-12-09 12:53:15,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarrickKnights, 3, 2
[DEBUG][2016-12-09 12:53:15,921](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Abeh_254, 3, 2
[DEBUG][2016-12-09 12:53:15,921](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AbbeyHassan, 3, 2
[DEBUG][2016-12-09 12:53:15,921](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ayamrb, 3, 2
[DEBUG][2016-12-09 12:53:15,937](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CodyMunn_14, 3, 2
[DEBUG][2016-12-09 12:53:15,937](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aaron_e1294, 3, 2
[DEBUG][2016-12-09 12:53:15,937](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dejesussteven11, 3, 2
[DEBUG][2016-12-09 12:53:15,952](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chloe_camxxx, 3, 2
[DEBUG][2016-12-09 12:53:15,952](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AmamaQuotes, 3, 2
[DEBUG][2016-12-09 12:53:15,952](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Eeoor, 3, 2
[DEBUG][2016-12-09 12:53:15,968](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : danyk395, 3, 2
[DEBUG][2016-12-09 12:53:15,968](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bryharrell, 3, 2
[DEBUG][2016-12-09 12:53:15,968](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 0chillwill, 3, 2
[DEBUG][2016-12-09 12:53:15,968](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FrediDervis, 3, 2
[DEBUG][2016-12-09 12:53:15,983](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dushiness, 3, 2
[DEBUG][2016-12-09 12:53:15,983](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CamsZA, 3, 2
[DEBUG][2016-12-09 12:53:15,983](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlmenanzaJan, 3, 2
[DEBUG][2016-12-09 12:53:15,999](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eve_kilel, 3, 2
[DEBUG][2016-12-09 12:53:15,999](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrooksTheGod, 3, 2
[DEBUG][2016-12-09 12:53:15,999](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaExpat, 3, 2
[DEBUG][2016-12-09 12:53:16,015](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenLeech2, 3, 2
[DEBUG][2016-12-09 12:53:16,015](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FinesseIM, 3, 2
[DEBUG][2016-12-09 12:53:16,015](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BartvanEijden, 3, 2
[DEBUG][2016-12-09 12:53:16,015](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eventrealestate, 3, 2
[DEBUG][2016-12-09 12:53:16,030](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : frickeradio, 3, 2
[DEBUG][2016-12-09 12:53:16,030](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DarlinMartor, 3, 2
[DEBUG][2016-12-09 12:53:16,030](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : elleneschwartz, 3, 2
[DEBUG][2016-12-09 12:53:16,046](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : geudehradun, 3, 2
[DEBUG][2016-12-09 12:53:16,046](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EecoValley, 3, 2
[DEBUG][2016-12-09 12:53:16,046](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 12jessicasims, 3, 2
[DEBUG][2016-12-09 12:53:16,062](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bootsy_17, 3, 2
[DEBUG][2016-12-09 12:53:16,062](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : davepollackjazz, 3, 2
[DEBUG][2016-12-09 12:53:16,062](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmelineVln, 3, 2
[DEBUG][2016-12-09 12:53:16,077](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : burhanaldroubi, 3, 2
[DEBUG][2016-12-09 12:53:16,077](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : christhinksthis, 3, 2
[DEBUG][2016-12-09 12:53:16,077](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlexFontana1995, 3, 2
[DEBUG][2016-12-09 12:53:16,077](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndreyKovalev94, 3, 2
[DEBUG][2016-12-09 12:53:16,093](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Conn_J_Will, 3, 2
[DEBUG][2016-12-09 12:53:16,093](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : funkyj, 3, 2
[DEBUG][2016-12-09 12:53:16,093](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrushTuArt, 3, 2
[DEBUG][2016-12-09 12:53:16,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : coopercomputer, 3, 2
[DEBUG][2016-12-09 12:53:16,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DarkNessie2, 3, 2
[DEBUG][2016-12-09 12:53:16,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AJYHYP, 3, 2
[DEBUG][2016-12-09 12:53:16,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Amanda_pike16, 3, 2
[DEBUG][2016-12-09 12:53:16,124](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DestinyMcMurray, 3, 2
[DEBUG][2016-12-09 12:53:16,124](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abolajisayo, 3, 2
[DEBUG][2016-12-09 12:53:16,124](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : c_alexandra03, 3, 2
[DEBUG][2016-12-09 12:53:16,140](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FostersFreeForm, 3, 2
[DEBUG][2016-12-09 12:53:16,140](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emibakes, 3, 2
[DEBUG][2016-12-09 12:53:16,140](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aaron_Woodward, 3, 2
[DEBUG][2016-12-09 12:53:16,155](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Duncan_Bramwell, 3, 2
[DEBUG][2016-12-09 12:53:16,155](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FrediZohar, 3, 2
[DEBUG][2016-12-09 12:53:16,155](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CaroReporting, 3, 2
[DEBUG][2016-12-09 12:53:16,171](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnmolSingh1110, 3, 2
[DEBUG][2016-12-09 12:53:16,171](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cbouchard6824, 3, 2
[DEBUG][2016-12-09 12:53:16,171](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ashaonthebeach, 3, 2
[DEBUG][2016-12-09 12:53:16,171](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ClickClique, 3, 2
[DEBUG][2016-12-09 12:53:16,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChitrapJoshi, 3, 2
[DEBUG][2016-12-09 12:53:16,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : allisondone, 3, 2
[DEBUG][2016-12-09 12:53:16,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ericapglenn, 3, 2
[DEBUG][2016-12-09 12:53:16,202](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CaaptainMorgann, 3, 2
[DEBUG][2016-12-09 12:53:16,202](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BeltempestBand, 3, 2
[DEBUG][2016-12-09 12:53:16,202](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cndyvo, 3, 2
[DEBUG][2016-12-09 12:53:16,218](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : angies1564, 3, 2
[DEBUG][2016-12-09 12:53:16,218](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : destroyK0, 3, 2
[DEBUG][2016-12-09 12:53:16,218](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bigrickirvin, 3, 2
[DEBUG][2016-12-09 12:53:16,234](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DebbieOlsen01, 3, 2
[DEBUG][2016-12-09 12:53:16,234](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bmansayswhat, 3, 2
[DEBUG][2016-12-09 12:53:16,234](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eloisechaplinYP, 3, 2
[DEBUG][2016-12-09 12:53:16,234](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AcworthGAHomes, 3, 2
[DEBUG][2016-12-09 12:53:16,249](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Alex_Mayberry, 3, 2
[DEBUG][2016-12-09 12:53:16,249](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Alfredoelias11R, 3, 2
[DEBUG][2016-12-09 12:53:16,249](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AmplifyUrBrand, 3, 2
[DEBUG][2016-12-09 12:53:16,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Biondi_D, 3, 2
[DEBUG][2016-12-09 12:53:16,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : b_money888, 3, 2
[DEBUG][2016-12-09 12:53:16,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : azarathus, 3, 2
[DEBUG][2016-12-09 12:53:16,265](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dylan_Weiding_, 3, 2
[DEBUG][2016-12-09 12:53:16,280](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bitesize17, 3, 2
[DEBUG][2016-12-09 12:53:16,280](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CitrusFoam, 3, 2
[DEBUG][2016-12-09 12:53:16,280](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : baepsehun, 3, 2
[DEBUG][2016-12-09 12:53:16,296](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dubcnews, 3, 2
[DEBUG][2016-12-09 12:53:16,296](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CandaceFayee, 3, 2
[DEBUG][2016-12-09 12:53:16,296](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chansubits, 3, 2
[DEBUG][2016-12-09 12:53:16,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FightMuayThai, 3, 2
[DEBUG][2016-12-09 12:53:16,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllisonMuni, 3, 2
[DEBUG][2016-12-09 12:53:16,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Danbharathy, 3, 2
[DEBUG][2016-12-09 12:53:16,312](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : danielmonty2, 3, 2
[DEBUG][2016-12-09 12:53:16,327](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : devita180, 3, 2
[DEBUG][2016-12-09 12:53:16,327](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Al1shaK, 3, 2
[DEBUG][2016-12-09 12:53:16,327](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : adriantalingdan, 3, 2
[DEBUG][2016-12-09 12:53:16,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GearVR_us, 3, 2
[DEBUG][2016-12-09 12:53:16,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : asu_kalekye, 3, 2
[DEBUG][2016-12-09 12:53:16,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GharFinder1, 3, 2
[DEBUG][2016-12-09 12:53:16,343](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : coleleonoff, 3, 2
[DEBUG][2016-12-09 12:53:16,359](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fluttergame, 3, 2
[DEBUG][2016-12-09 12:53:16,359](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CadillacGabe, 3, 2
[DEBUG][2016-12-09 12:53:16,359](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FOBA69, 3, 2
[DEBUG][2016-12-09 12:53:16,374](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : giselleyygee, 3, 2
[DEBUG][2016-12-09 12:53:16,374](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amarpadda, 3, 2
[DEBUG][2016-12-09 12:53:16,374](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dianerule, 3, 2
[DEBUG][2016-12-09 12:53:16,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FreeVentures, 3, 2
[DEBUG][2016-12-09 12:53:16,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dts_designs, 3, 2
[DEBUG][2016-12-09 12:53:16,390](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : donovanerba, 3, 2
[DEBUG][2016-12-09 12:53:16,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amy_clari, 3, 2
[DEBUG][2016-12-09 12:53:16,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brandonkenyon55, 3, 2
[DEBUG][2016-12-09 12:53:16,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmilyLoren3, 3, 2
[DEBUG][2016-12-09 12:53:16,405](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fakeb0yfriend, 3, 2
[DEBUG][2016-12-09 12:53:16,421](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Djaaaaayy, 3, 2
[DEBUG][2016-12-09 12:53:16,421](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : diane196030, 3, 2
[DEBUG][2016-12-09 12:53:16,421](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dottieevans14, 3, 2
[DEBUG][2016-12-09 12:53:16,437](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gavinhoops2, 3, 2
[DEBUG][2016-12-09 12:53:16,437](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anesbit1, 3, 2
[DEBUG][2016-12-09 12:53:16,437](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FxSnipes, 3, 2
[DEBUG][2016-12-09 12:53:16,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlphaPhiCSUSB, 3, 2
[DEBUG][2016-12-09 12:53:16,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DiabloLeveling, 3, 2
[DEBUG][2016-12-09 12:53:16,452](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : crisssy_xoxo, 3, 2
[DEBUG][2016-12-09 12:53:16,468](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dakota_Roice206, 3, 2
[DEBUG][2016-12-09 12:53:16,468](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FAN717, 3, 2
[DEBUG][2016-12-09 12:53:16,468](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : collay26, 3, 2
[DEBUG][2016-12-09 12:53:16,484](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : galestormKitsun, 3, 2
[DEBUG][2016-12-09 12:53:16,484](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fleurdecuers, 3, 2
[DEBUG][2016-12-09 12:53:16,484](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrothaLuke, 3, 2
[DEBUG][2016-12-09 12:53:16,499](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlexGuerrerj, 3, 2
[DEBUG][2016-12-09 12:53:16,499](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FrederickSFWong, 3, 2
[DEBUG][2016-12-09 12:53:16,499](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DJMNE1, 3, 2
[DEBUG][2016-12-09 12:53:16,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Em_the_potatoe, 3, 2
[DEBUG][2016-12-09 12:53:16,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : D_and_J1, 3, 2
[DEBUG][2016-12-09 12:53:16,515](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlecAustin, 3, 2
[DEBUG][2016-12-09 12:53:16,530](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndreaShayLA, 3, 2
[DEBUG][2016-12-09 12:53:16,530](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnsleyGordon, 3, 2
[DEBUG][2016-12-09 12:53:16,530](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : crzydemona, 3, 2
[DEBUG][2016-12-09 12:53:16,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deemaritz, 3, 2
[DEBUG][2016-12-09 12:53:16,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : frexkish, 3, 2
[DEBUG][2016-12-09 12:53:16,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CinsAngel42, 3, 2
[DEBUG][2016-12-09 12:53:16,546](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aliciadugan10, 3, 2
[DEBUG][2016-12-09 12:53:16,562](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alyssa_patience, 3, 2
[DEBUG][2016-12-09 12:53:16,562](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChloDreww, 3, 2
[DEBUG][2016-12-09 12:53:16,562](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chadbrennan17, 3, 2
[DEBUG][2016-12-09 12:53:16,577](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cpickensNYC, 3, 2
[DEBUG][2016-12-09 12:53:16,577](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dannie_brookee, 3, 2
[DEBUG][2016-12-09 12:53:16,577](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : conan4363, 3, 2
[DEBUG][2016-12-09 12:53:16,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cgriffrun, 3, 2
[DEBUG][2016-12-09 12:53:16,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : babesband, 3, 2
[DEBUG][2016-12-09 12:53:16,593](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Beezinland360, 3, 2
[DEBUG][2016-12-09 12:53:16,609](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brylovell, 3, 2
[DEBUG][2016-12-09 12:53:16,609](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CCSaloon, 3, 2
[DEBUG][2016-12-09 12:53:16,609](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ekkosecurity, 3, 2
[DEBUG][2016-12-09 12:53:16,609](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : evilzug, 3, 2
[DEBUG][2016-12-09 12:53:16,624](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 0B_JuanKenobi, 3, 2
[DEBUG][2016-12-09 12:53:16,624](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 604arun, 3, 2
[DEBUG][2016-12-09 12:53:16,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AbbyPerkins8, 3, 2
[DEBUG][2016-12-09 12:53:16,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 9never_any, 3, 2
[DEBUG][2016-12-09 12:53:16,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chawesomegirl8, 3, 2
[DEBUG][2016-12-09 12:53:16,640](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fleurgunn, 3, 2
[DEBUG][2016-12-09 12:53:16,656](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BigEasyLofton, 3, 2
[DEBUG][2016-12-09 12:53:16,656](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CNNLADESK, 3, 2
[DEBUG][2016-12-09 12:53:16,656](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ericaajacks, 3, 2
[DEBUG][2016-12-09 12:53:16,671](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dipishrai, 3, 2
[DEBUG][2016-12-09 12:53:16,671](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FezProvidence, 3, 2
[DEBUG][2016-12-09 12:53:16,671](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChanceMaciolek, 3, 2
[DEBUG][2016-12-09 12:53:16,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DALUX_, 3, 2
[DEBUG][2016-12-09 12:53:16,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : audio_adam, 3, 2
[DEBUG][2016-12-09 12:53:16,687](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DonnieWark, 3, 2
[DEBUG][2016-12-09 12:53:16,702](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ellieellie586, 3, 2
[DEBUG][2016-12-09 12:53:16,702](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 8755745454, 3, 2
[DEBUG][2016-12-09 12:53:16,702](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dbao, 3, 2
[DEBUG][2016-12-09 12:53:16,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : diaralkaldy, 3, 2
[DEBUG][2016-12-09 12:53:16,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FarmLeague, 3, 2
[DEBUG][2016-12-09 12:53:16,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : barbajulz, 3, 2
[DEBUG][2016-12-09 12:53:16,718](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AgentFenton, 3, 2
[DEBUG][2016-12-09 12:53:16,734](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AyyoHutto, 3, 2
[DEBUG][2016-12-09 12:53:16,734](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BEHallABC, 3, 2
[DEBUG][2016-12-09 12:53:16,734](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BigWuiz, 3, 2
[DEBUG][2016-12-09 12:53:16,749](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : billfathers, 3, 2
[DEBUG][2016-12-09 12:53:16,749](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : blueskiesnola, 3, 2
[DEBUG][2016-12-09 12:53:16,749](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : daniraee, 3, 2
[DEBUG][2016-12-09 12:53:16,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : americalizethh, 3, 2
[DEBUG][2016-12-09 12:53:16,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : davesworld57, 3, 2
[DEBUG][2016-12-09 12:53:16,765](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dnae_Marie, 3, 2
[DEBUG][2016-12-09 12:53:16,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emilyburchy, 3, 2
[DEBUG][2016-12-09 12:53:16,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmmaKAugustine, 3, 2
[DEBUG][2016-12-09 12:53:16,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ABC7JayE, 3, 2
[DEBUG][2016-12-09 12:53:16,780](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alexisgracehigg, 3, 2
[DEBUG][2016-12-09 12:53:16,796](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anacartur, 3, 2
[DEBUG][2016-12-09 12:53:16,796](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Belieber12272, 3, 2
[DEBUG][2016-12-09 12:53:16,796](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BTLightbody, 3, 2
[DEBUG][2016-12-09 12:53:16,812](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cristia66166705, 3, 2
[DEBUG][2016-12-09 12:53:16,859](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : docarsenic, 3, 2
[DEBUG][2016-12-09 12:53:16,859](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ElysiaKrupp, 3, 2
[DEBUG][2016-12-09 12:53:16,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ayeeenando, 3, 2
[DEBUG][2016-12-09 12:53:16,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ballislifee_5, 3, 2
[DEBUG][2016-12-09 12:53:16,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChanningsMuva, 3, 2
[DEBUG][2016-12-09 12:53:16,874](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 0_Fuk_Given, 3, 2
[DEBUG][2016-12-09 12:53:16,890](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BloopyFoxx, 3, 2
[DEBUG][2016-12-09 12:53:16,890](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DancunAwitty, 3, 2
[DEBUG][2016-12-09 12:53:16,890](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : girby, 3, 2
[DEBUG][2016-12-09 12:53:16,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AccordingtoDrew, 3, 2
[DEBUG][2016-12-09 12:53:16,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Artin__22, 3, 2
[DEBUG][2016-12-09 12:53:16,905](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : czatwins11, 3, 2
[DEBUG][2016-12-09 12:53:16,921](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CelebVegasTours, 3, 2
[DEBUG][2016-12-09 12:53:16,921](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GabriellaBruno6, 3, 2
[DEBUG][2016-12-09 12:53:16,921](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarrieTooman, 3, 2
[DEBUG][2016-12-09 12:53:16,937](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ArtisticRite, 3, 2
[DEBUG][2016-12-09 12:53:16,937](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ccampanellaa, 3, 2
[DEBUG][2016-12-09 12:53:16,937](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 358
[INFO ][2016-12-09 12:53:16,937](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 12:53:16,952](CLBCalculation.java:1152) - 			EP1:174 EP2:1373 EP3:454 
[INFO ][2016-12-09 12:53:16,952](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 12:53:17,437](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 12:53:17,437](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 12:53:17,452](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 12:53:17,452](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 12:53:17,468](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 12:53:17,468](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 13:51:07,653](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 13:51:12,294](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 13:51:47,891](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 13:51:53,095](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 13:51:53,111](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 13:51:53,157](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 13:51:53,157](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 13:51:53,157](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 13:51:53,157](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 13:51:53,173](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 13:51:53,173](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 13:51:53,173](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 13:51:53,439](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 13:52:58,133](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 13:52:58,133](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 13:52:58,133](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 13:52:58,149](CLPCalculation.java:106) - 	* number of user : 1573
[INFO ][2016-12-09 13:53:00,290](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 13:53:00,305](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 13:53:00,805](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 13:53:00,805](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 13:53:00,805](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 13:53:00,805](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 13:53:00,805](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 13:53:00,805](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 13:53:00,805](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 13:53:00,837](CLBCalculation.java:194) - 		* EP1 : 23005
[DEBUG][2016-12-09 13:53:00,837](CLBCalculation.java:194) - 		* EP2 : 159621
[DEBUG][2016-12-09 13:53:00,837](CLBCalculation.java:194) - 		* EP3 : 47438
[DEBUG][2016-12-09 13:53:00,852](CLBCalculation.java:197) - 		* server total traffic : 230064
[DEBUG][2016-12-09 13:53:00,852](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 13:53:00,852](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 13:53:00,852](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 13:53:00,852](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 13:53:00,852](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 13:53:00,852](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 13:53:02,384](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 13:53:02,384](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:159621, (Expected Traffic:0,) Remain Traffic:-29621
[INFO ][2016-12-09 13:53:02,399](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:23005, (Expected Traffic:0,) Remain Traffic:106995
[INFO ][2016-12-09 13:53:02,399](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:47438, (Expected Traffic:0,) Remain Traffic:17562
[INFO ][2016-12-09 13:53:02,415](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:702) - 		surplusServerList.size() > 1
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:706) - 		* traffic type : * MEDIUM_TRAFFIC 

[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,415](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 13:53:02,431](CLBCalculation.java:721) - 		Priority 1. social + distance
[INFO ][2016-12-09 13:53:02,431](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 13:53:02,431](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 13:53:02,431](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:159621, (Expected Traffic:0,) Remain Traffic:-29621
[INFO ][2016-12-09 13:53:02,446](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:23005, (Expected Traffic:0,) Remain Traffic:106995
[INFO ][2016-12-09 13:53:02,446](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:47438, (Expected Traffic:0,) Remain Traffic:17562
[INFO ][2016-12-09 13:53:02,446](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 13:53:02,462](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 13:53:02,477](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 13:53:02,493](CLBCalculation.java:1097) - 			EP1:174 EP2:1373 EP3:454 
[DEBUG][2016-12-09 13:53:02,993](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anderson_mutua, 2, 1
[DEBUG][2016-12-09 13:53:02,993](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : carlojanea, 2, 1
[DEBUG][2016-12-09 13:53:03,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : angelserwelas, 2, 1
[DEBUG][2016-12-09 13:53:03,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 31maki31, 2, 1
[DEBUG][2016-12-09 13:53:03,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : belieberfan09, 2, 1
[DEBUG][2016-12-09 13:53:03,024](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emilyyjaimes, 2, 1
[DEBUG][2016-12-09 13:53:03,024](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emme_Mercy, 2, 1
[DEBUG][2016-12-09 13:53:03,024](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dreamembr, 2, 1
[DEBUG][2016-12-09 13:53:03,024](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bat_otgon_b, 2, 1
[DEBUG][2016-12-09 13:53:03,040](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AldrinTheReal, 2, 1
[DEBUG][2016-12-09 13:53:03,040](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Arushi134, 2, 1
[DEBUG][2016-12-09 13:53:03,040](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AUPCareers, 2, 1
[DEBUG][2016-12-09 13:53:03,056](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : annisrisky, 2, 1
[DEBUG][2016-12-09 13:53:03,056](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Amu_Tsogoo, 2, 1
[DEBUG][2016-12-09 13:53:03,056](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aleynquan, 2, 1
[DEBUG][2016-12-09 13:53:03,071](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : danielgjoede, 2, 1
[DEBUG][2016-12-09 13:53:03,071](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abedf92, 2, 1
[DEBUG][2016-12-09 13:53:03,071](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnnMcConnell, 2, 1
[DEBUG][2016-12-09 13:53:03,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fjhr, 2, 1
[DEBUG][2016-12-09 13:53:03,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Abdula_Anisetty, 2, 1
[DEBUG][2016-12-09 13:53:03,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aliiii_baba, 2, 1
[DEBUG][2016-12-09 13:53:03,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : adshead_l, 2, 1
[DEBUG][2016-12-09 13:53:03,102](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DaySpaSavannah, 2, 1
[DEBUG][2016-12-09 13:53:03,102](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : am050505, 2, 1
[DEBUG][2016-12-09 13:53:03,102](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : esa_uon, 2, 1
[DEBUG][2016-12-09 13:53:03,118](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ginnyhamrick, 2, 1
[DEBUG][2016-12-09 13:53:06,994](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DianneYanda, 2, 3
[DEBUG][2016-12-09 13:53:06,994](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ClaussenFarmer, 2, 3
[DEBUG][2016-12-09 13:53:07,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : barodaproperty, 2, 3
[DEBUG][2016-12-09 13:53:07,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : donscheibenreif, 2, 3
[DEBUG][2016-12-09 13:53:07,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aahana_dhar, 2, 3
[DEBUG][2016-12-09 13:53:07,009](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ajoycecasas, 2, 3
[DEBUG][2016-12-09 13:53:07,025](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bhrioni, 2, 3
[DEBUG][2016-12-09 13:53:07,025](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 0a3430129c1b4f5, 2, 3
[DEBUG][2016-12-09 13:53:07,025](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Erorentals, 2, 3
[DEBUG][2016-12-09 13:53:07,040](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Erelcaroline, 2, 3
[DEBUG][2016-12-09 13:53:07,040](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Garcia_leon_, 2, 3
[DEBUG][2016-12-09 13:53:07,040](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 12jessicasims, 2, 3
[DEBUG][2016-12-09 13:53:07,056](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : duane_08, 2, 3
[DEBUG][2016-12-09 13:53:07,056](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaExpat, 2, 3
[DEBUG][2016-12-09 13:53:07,056](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : faine_goldman, 2, 3
[DEBUG][2016-12-09 13:53:07,072](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Geraldine_Julie, 2, 3
[DEBUG][2016-12-09 13:53:07,072](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FatinaAlAhmad, 2, 3
[DEBUG][2016-12-09 13:53:07,072](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : benoitcorbel, 2, 3
[DEBUG][2016-12-09 13:53:07,072](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : e671046e2c5b424, 2, 3
[DEBUG][2016-12-09 13:53:07,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cell_met, 2, 3
[DEBUG][2016-12-09 13:53:07,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ELODIE12345678, 2, 3
[DEBUG][2016-12-09 13:53:07,087](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : efirenzaputra, 2, 3
[DEBUG][2016-12-09 13:53:07,103](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abhaynawani, 2, 3
[DEBUG][2016-12-09 13:53:07,103](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ale0099, 2, 3
[DEBUG][2016-12-09 13:53:07,103](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DMarketHall, 2, 3
[DEBUG][2016-12-09 13:53:07,119](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eve_kilel, 2, 3
[DEBUG][2016-12-09 13:53:07,119](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : atomspark1618, 2, 3
[DEBUG][2016-12-09 13:53:07,119](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenStands, 2, 3
[DEBUG][2016-12-09 13:53:07,134](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarberryMedia, 2, 3
[DEBUG][2016-12-09 13:53:07,134](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FDeLucia, 2, 3
[DEBUG][2016-12-09 13:53:07,134](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : barrycoltham, 2, 3
[DEBUG][2016-12-09 13:53:07,150](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eduardsputra, 2, 3
[DEBUG][2016-12-09 13:53:07,150](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : d4v3g, 2, 3
[DEBUG][2016-12-09 13:53:07,150](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Chivalme, 2, 3
[DEBUG][2016-12-09 13:53:07,150](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarrickKnights, 2, 3
[DEBUG][2016-12-09 13:53:07,165](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ATHENA_RESE, 2, 3
[DEBUG][2016-12-09 13:53:07,165](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cbl_cranebank, 2, 3
[DEBUG][2016-12-09 13:53:07,165](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BruneParkSchool, 2, 3
[DEBUG][2016-12-09 13:53:07,181](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ForciPafo, 2, 3
[DEBUG][2016-12-09 13:53:07,181](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : franklychilli, 2, 3
[DEBUG][2016-12-09 13:53:07,181](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FrediDervis, 2, 3
[DEBUG][2016-12-09 13:53:07,197](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alyssa_patience, 2, 3
[DEBUG][2016-12-09 13:53:07,197](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmmaJ_XPP, 2, 3
[DEBUG][2016-12-09 13:53:07,197](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AliaWakileh, 2, 3
[DEBUG][2016-12-09 13:53:07,212](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FinesseIM, 2, 3
[DEBUG][2016-12-09 13:53:07,212](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : craigmoses14, 2, 3
[DEBUG][2016-12-09 13:53:07,212](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : burhanaldroubi, 2, 3
[DEBUG][2016-12-09 13:53:07,228](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Benoit_Lavier, 2, 3
[DEBUG][2016-12-09 13:53:07,228](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ClickClique, 2, 3
[DEBUG][2016-12-09 13:53:07,228](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BradRigoulot, 2, 3
[DEBUG][2016-12-09 13:53:07,228](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cen_health, 2, 3
[DEBUG][2016-12-09 13:53:07,244](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BahadirDurak, 2, 3
[DEBUG][2016-12-09 13:53:07,244](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cereul_, 2, 3
[DEBUG][2016-12-09 13:53:07,244](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Bigskye1144, 2, 3
[DEBUG][2016-12-09 13:53:07,259](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DarusPoken, 2, 3
[DEBUG][2016-12-09 13:53:07,259](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllyDillsworth, 2, 3
[DEBUG][2016-12-09 13:53:07,259](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bellgiunta, 2, 3
[DEBUG][2016-12-09 13:53:07,275](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaCollegeIA, 2, 3
[DEBUG][2016-12-09 13:53:07,275](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CaroReporting, 2, 3
[DEBUG][2016-12-09 13:53:07,275](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cbouchard6824, 2, 3
[DEBUG][2016-12-09 13:53:07,290](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abolajisayo, 2, 3
[DEBUG][2016-12-09 13:53:07,290](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EMCSwitzerland, 2, 3
[DEBUG][2016-12-09 13:53:07,290](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BabuddinI, 2, 3
[DEBUG][2016-12-09 13:53:07,306](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ellis_kevaughn7, 2, 3
[DEBUG][2016-12-09 13:53:07,306](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Colourworks_ZA, 2, 3
[DEBUG][2016-12-09 13:53:07,306](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dtadgh, 2, 3
[DEBUG][2016-12-09 13:53:07,306](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : callmeWHISKY, 2, 3
[DEBUG][2016-12-09 13:53:07,322](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CountyGazetteEd, 2, 3
[DEBUG][2016-12-09 13:53:07,322](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BigT_90, 2, 3
[DEBUG][2016-12-09 13:53:07,322](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Alexvitola3, 2, 3
[DEBUG][2016-12-09 13:53:07,337](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 02SarahM, 2, 3
[DEBUG][2016-12-09 13:53:07,337](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ashaonthebeach, 2, 3
[DEBUG][2016-12-09 13:53:07,337](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 98
[INFO ][2016-12-09 13:53:07,337](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 13:53:07,353](CLBCalculation.java:1152) - 			EP1:200 EP2:1275 EP3:526 
[INFO ][2016-12-09 13:53:07,353](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 13:53:07,791](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 13:53:07,791](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 13:53:07,806](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 13:53:07,806](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 13:53:07,822](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 13:53:07,822](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 14:51:11,758](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 14:51:13,883](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 14:51:53,137](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 14:52:03,248](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 14:52:03,263](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 14:52:03,279](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 14:52:03,279](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 14:52:03,279](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 14:52:03,279](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 14:52:03,295](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 14:52:03,295](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 14:52:03,295](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 14:52:03,592](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 14:53:11,599](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 14:53:11,614](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 14:53:11,614](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 14:53:11,630](CLPCalculation.java:106) - 	* number of user : 1691
[INFO ][2016-12-09 14:53:13,990](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 14:53:13,990](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 14:53:14,583](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 14:53:14,583](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 14:53:14,583](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 14:53:14,583](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 14:53:14,583](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 14:53:14,583](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 14:53:14,599](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 14:53:14,599](CLBCalculation.java:194) - 		* EP1 : 29211
[DEBUG][2016-12-09 14:53:14,615](CLBCalculation.java:194) - 		* EP2 : 167536
[DEBUG][2016-12-09 14:53:14,615](CLBCalculation.java:194) - 		* EP3 : 62010
[DEBUG][2016-12-09 14:53:14,615](CLBCalculation.java:197) - 		* server total traffic : 258757
[DEBUG][2016-12-09 14:53:14,615](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 14:53:14,615](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 14:53:14,615](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 14:53:14,615](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 14:53:14,615](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 14:53:14,630](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 14:53:16,052](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 14:53:16,052](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:167536, (Expected Traffic:0,) Remain Traffic:-37536
[INFO ][2016-12-09 14:53:16,052](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:29211, (Expected Traffic:0,) Remain Traffic:100789
[INFO ][2016-12-09 14:53:16,068](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:62010, (Expected Traffic:0,) Remain Traffic:2990
[INFO ][2016-12-09 14:53:16,068](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:702) - 		surplusServerList.size() > 1
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:706) - 		* traffic type : * MEDIUM_TRAFFIC 

[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 14:53:16,084](CLBCalculation.java:721) - 		Priority 1. social + distance
[INFO ][2016-12-09 14:53:16,084](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 14:53:16,084](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 14:53:16,099](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:167536, (Expected Traffic:0,) Remain Traffic:-37536
[INFO ][2016-12-09 14:53:16,099](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:29211, (Expected Traffic:0,) Remain Traffic:100789
[INFO ][2016-12-09 14:53:16,115](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:62010, (Expected Traffic:0,) Remain Traffic:2990
[INFO ][2016-12-09 14:53:16,115](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 14:53:16,115](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 14:53:16,131](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 14:53:16,146](CLBCalculation.java:1097) - 			EP1:200 EP2:1275 EP3:526 
[DEBUG][2016-12-09 14:53:16,724](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gilferrersalon, 2, 1
[DEBUG][2016-12-09 14:53:16,740](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bellarukmana, 2, 1
[DEBUG][2016-12-09 14:53:16,740](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : almightyfighter, 2, 1
[DEBUG][2016-12-09 14:53:16,740](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : djsmartvil1, 2, 1
[DEBUG][2016-12-09 14:53:16,756](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emibakes, 2, 1
[DEBUG][2016-12-09 14:53:16,756](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CaraidArt, 2, 1
[DEBUG][2016-12-09 14:53:16,756](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ester_jvita, 2, 1
[DEBUG][2016-12-09 14:53:16,771](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Febriiyoga, 2, 1
[DEBUG][2016-12-09 14:53:16,771](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DBalj, 2, 1
[DEBUG][2016-12-09 14:53:16,771](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ddyahsuci, 2, 1
[DEBUG][2016-12-09 14:53:16,771](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GithaKawengian, 2, 1
[DEBUG][2016-12-09 14:53:16,787](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : albertzace, 2, 1
[DEBUG][2016-12-09 14:53:16,787](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brigitaMK, 2, 1
[DEBUG][2016-12-09 14:53:16,787](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BasharMJarrar, 2, 1
[DEBUG][2016-12-09 14:53:16,803](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chemonye, 2, 1
[DEBUG][2016-12-09 14:53:16,803](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ejm3d, 2, 1
[DEBUG][2016-12-09 14:53:16,803](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amalthya, 2, 1
[DEBUG][2016-12-09 14:53:16,818](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AdammmWalsh, 2, 1
[DEBUG][2016-12-09 14:53:16,818](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Bintyswazuri, 2, 1
[DEBUG][2016-12-09 14:53:16,818](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brahimchhit, 2, 1
[DEBUG][2016-12-09 14:53:16,834](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BuiltbyFlaws, 2, 1
[DEBUG][2016-12-09 14:53:16,834](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DaveyOil, 2, 1
[DEBUG][2016-12-09 14:53:16,834](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : andyrtd, 2, 1
[DEBUG][2016-12-09 14:53:16,849](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DavidWoolley3, 2, 1
[DEBUG][2016-12-09 14:53:16,849](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GASTWESOsmanlee, 2, 1
[DEBUG][2016-12-09 14:53:16,849](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CadillacQYK, 2, 1
[DEBUG][2016-12-09 14:53:16,849](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CheyRescorl, 2, 1
[DEBUG][2016-12-09 14:53:16,865](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 1985Dejan, 2, 1
[DEBUG][2016-12-09 14:53:16,865](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : batbuyan01, 2, 1
[DEBUG][2016-12-09 14:53:16,865](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BIG_UGLE, 2, 1
[DEBUG][2016-12-09 14:53:16,881](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ClementFroger, 2, 1
[DEBUG][2016-12-09 14:53:16,881](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : collay26, 2, 1
[DEBUG][2016-12-09 14:53:16,881](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bary__meth, 2, 1
[DEBUG][2016-12-09 14:53:16,896](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 3_samoNB_3, 2, 1
[DEBUG][2016-12-09 14:53:16,896](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DemetriusMJames, 2, 1
[DEBUG][2016-12-09 14:53:16,896](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : calledtobeone, 2, 1
[DEBUG][2016-12-09 14:53:16,896](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Enda_Mahatva, 2, 1
[DEBUG][2016-12-09 14:53:16,912](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : a_sis62, 2, 1
[DEBUG][2016-12-09 14:53:16,912](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : caileydanielle, 2, 1
[DEBUG][2016-12-09 14:53:16,912](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DJAFothergill, 2, 1
[DEBUG][2016-12-09 14:53:16,927](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ALRadeck, 2, 1
[DEBUG][2016-12-09 14:53:16,927](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Arun_bravo_M, 2, 1
[DEBUG][2016-12-09 14:53:16,927](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fgortazar, 2, 1
[DEBUG][2016-12-09 14:53:16,943](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AussieGators, 2, 1
[DEBUG][2016-12-09 14:53:16,943](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlombossChollo, 2, 1
[DEBUG][2016-12-09 14:53:16,943](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AmamaQuotes, 2, 1
[DEBUG][2016-12-09 14:53:16,959](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deb_staub, 2, 1
[DEBUG][2016-12-09 14:53:16,959](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dorcholac, 2, 1
[DEBUG][2016-12-09 14:53:16,959](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CelebVegasTours, 2, 1
[DEBUG][2016-12-09 14:53:16,974](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ashtonleighbeck, 2, 1
[DEBUG][2016-12-09 14:53:16,974](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CNNLADESK, 2, 1
[DEBUG][2016-12-09 14:53:16,974](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EricBlackIsHere, 2, 1
[DEBUG][2016-12-09 14:53:16,990](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarolynArthurs1, 2, 1
[DEBUG][2016-12-09 14:53:16,990](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BonnieeKiedis, 2, 1
[DEBUG][2016-12-09 14:53:16,990](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DCMathsDept, 2, 1
[DEBUG][2016-12-09 14:53:17,006](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brian_deyoung, 2, 1
[DEBUG][2016-12-09 14:53:17,006](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Abeh_254, 2, 1
[DEBUG][2016-12-09 14:53:17,006](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ashenork, 2, 1
[DEBUG][2016-12-09 14:53:17,021](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : deepikadharnaik, 2, 1
[DEBUG][2016-12-09 14:53:17,021](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChitrapJoshi, 2, 1
[DEBUG][2016-12-09 14:53:17,021](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alainveuve, 2, 1
[DEBUG][2016-12-09 14:53:17,037](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ariel_Angelico, 2, 1
[DEBUG][2016-12-09 14:53:17,037](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ErikaHofacker7, 2, 1
[DEBUG][2016-12-09 14:53:17,037](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : angelicadelpap1, 2, 1
[DEBUG][2016-12-09 14:53:17,037](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CamsZA, 2, 1
[DEBUG][2016-12-09 14:53:17,052](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : arjhinton, 2, 1
[DEBUG][2016-12-09 14:53:17,084](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ChellerChris, 2, 1
[DEBUG][2016-12-09 14:53:17,099](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brandonkenyon55, 2, 1
[DEBUG][2016-12-09 14:53:17,099](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Al1shaK, 2, 1
[DEBUG][2016-12-09 14:53:17,099](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bbqbistrro, 2, 1
[DEBUG][2016-12-09 14:53:17,115](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaCollegeAlum, 2, 1
[DEBUG][2016-12-09 14:53:17,115](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrooksTheGod, 2, 1
[DEBUG][2016-12-09 14:53:17,115](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alhajisuley, 2, 1
[DEBUG][2016-12-09 14:53:17,131](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Bradys_Landing, 2, 1
[DEBUG][2016-12-09 14:53:17,131](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gloriakhj, 2, 1
[DEBUG][2016-12-09 14:53:17,131](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DisruptionAlert, 2, 1
[DEBUG][2016-12-09 14:53:17,131](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amisha1301, 2, 1
[DEBUG][2016-12-09 14:53:17,146](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnoopKumarBhat, 2, 1
[DEBUG][2016-12-09 14:53:17,146](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : christhinksthis, 2, 1
[DEBUG][2016-12-09 14:53:17,146](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bryzkicetea, 2, 1
[DEBUG][2016-12-09 14:53:17,162](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : briankiamba, 2, 1
[DEBUG][2016-12-09 14:53:17,162](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DarlinMartor, 2, 1
[DEBUG][2016-12-09 14:53:17,162](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ashtonevans, 2, 1
[DEBUG][2016-12-09 14:53:17,178](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ganeshdeals, 2, 1
[DEBUG][2016-12-09 14:53:17,178](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dcoachman6, 2, 1
[DEBUG][2016-12-09 14:53:17,178](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anamkazimMLA, 2, 1
[DEBUG][2016-12-09 14:53:17,193](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cjohndeakin, 2, 1
[DEBUG][2016-12-09 14:53:17,193](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AshesRse, 2, 1
[DEBUG][2016-12-09 14:53:17,193](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : c_alexandra03, 2, 1
[DEBUG][2016-12-09 14:53:17,193](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dushiness, 2, 1
[DEBUG][2016-12-09 14:53:17,209](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : allycKe, 2, 1
[DEBUG][2016-12-09 14:53:17,209](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DimeStudios, 2, 1
[DEBUG][2016-12-09 14:53:17,209](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cnxcnx, 2, 1
[DEBUG][2016-12-09 14:53:17,224](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : coltheiden, 2, 1
[DEBUG][2016-12-09 14:53:17,224](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aaron_Woodward, 2, 1
[DEBUG][2016-12-09 14:53:17,224](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : artofmithril, 2, 1
[DEBUG][2016-12-09 14:53:17,240](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anirbanmukh, 2, 1
[DEBUG][2016-12-09 14:53:17,240](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : comtelza, 2, 1
[DEBUG][2016-12-09 14:53:17,240](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : adriantalingdan, 2, 1
[DEBUG][2016-12-09 14:53:17,256](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 01BlackRose08, 2, 1
[DEBUG][2016-12-09 14:53:17,256](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : donovanerba, 2, 1
[DEBUG][2016-12-09 14:53:17,256](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ClaireyFiler, 2, 1
[DEBUG][2016-12-09 14:53:17,256](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : G0ATSHRINE, 2, 1
[DEBUG][2016-12-09 14:53:17,271](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AplisoSA, 2, 1
[DEBUG][2016-12-09 14:53:17,271](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndreaVRinaldi, 2, 1
[DEBUG][2016-12-09 14:53:17,271](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 8755745454, 2, 1
[DEBUG][2016-12-09 14:53:17,287](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Genmathenge3, 2, 1
[DEBUG][2016-12-09 14:53:17,287](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Fernando_wulur, 2, 1
[DEBUG][2016-12-09 14:53:17,287](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DemiKarras6, 2, 1
[DEBUG][2016-12-09 14:53:17,303](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrileyAnn23, 2, 1
[DEBUG][2016-12-09 14:53:17,303](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GenoAteTampa, 2, 1
[DEBUG][2016-12-09 14:53:17,303](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aaron_e1294, 2, 1
[DEBUG][2016-12-09 14:53:17,303](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anyonaalex, 2, 1
[DEBUG][2016-12-09 14:53:17,318](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brankdollas, 2, 1
[DEBUG][2016-12-09 14:53:17,318](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bree_wurst, 2, 1
[DEBUG][2016-12-09 14:53:17,318](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Alex_Mayberry, 2, 1
[DEBUG][2016-12-09 14:53:17,334](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrothaLuke, 2, 1
[DEBUG][2016-12-09 14:53:17,334](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CloverCoin, 2, 1
[DEBUG][2016-12-09 14:53:17,334](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alessandraVScrt, 2, 1
[DEBUG][2016-12-09 14:53:17,349](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ericapglenn, 2, 1
[DEBUG][2016-12-09 14:53:17,349](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : garyjford1981, 2, 1
[DEBUG][2016-12-09 14:53:17,349](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : baptistebonnef1, 2, 1
[DEBUG][2016-12-09 14:53:17,365](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : galestormKitsun, 2, 1
[DEBUG][2016-12-09 14:53:17,365](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CynthiaCCarter, 2, 1
[DEBUG][2016-12-09 14:53:17,365](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CalliSchillaci, 2, 1
[DEBUG][2016-12-09 14:53:17,381](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Chuchu_Maureen, 2, 1
[DEBUG][2016-12-09 14:53:17,381](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fsambai, 2, 1
[DEBUG][2016-12-09 14:53:17,381](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CouncilOfFools, 2, 1
[DEBUG][2016-12-09 14:53:17,381](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Askembora, 2, 1
[DEBUG][2016-12-09 14:53:17,396](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenRoberts07, 2, 1
[DEBUG][2016-12-09 14:53:17,396](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GabriellaBruno6, 2, 1
[DEBUG][2016-12-09 14:53:17,396](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ashhhhtonx, 2, 1
[DEBUG][2016-12-09 14:53:17,412](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : binaryworker, 2, 1
[DEBUG][2016-12-09 14:53:17,412](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DarkNessie2, 2, 1
[DEBUG][2016-12-09 14:53:17,412](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emleebakes, 2, 1
[DEBUG][2016-12-09 14:53:17,428](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fckyesmichelle, 2, 1
[DEBUG][2016-12-09 14:53:17,428](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Carson_Heim_, 2, 1
[DEBUG][2016-12-09 14:53:17,428](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emmaholder, 2, 1
[DEBUG][2016-12-09 14:53:17,443](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aikopots24, 2, 1
[DEBUG][2016-12-09 14:53:17,443](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Chikkymo, 2, 1
[DEBUG][2016-12-09 14:53:17,443](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BWalloch, 2, 1
[DEBUG][2016-12-09 14:53:17,443](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bryharrell, 2, 1
[DEBUG][2016-12-09 14:53:17,459](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ellencollardmyp, 2, 1
[DEBUG][2016-12-09 14:53:17,459](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 17huletts, 2, 1
[DEBUG][2016-12-09 14:53:17,459](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Arushi_Rawat, 2, 1
[DEBUG][2016-12-09 14:53:17,474](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cmerolli, 2, 1
[DEBUG][2016-12-09 14:53:17,474](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : annmurdesign, 2, 1
[DEBUG][2016-12-09 14:53:17,474](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chadbrennan17, 2, 1
[DEBUG][2016-12-09 14:53:17,490](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CandieW, 2, 1
[DEBUG][2016-12-09 14:53:17,490](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fleurdecuers, 2, 1
[DEBUG][2016-12-09 14:53:17,490](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DJTyga_SA, 2, 1
[DEBUG][2016-12-09 14:53:17,506](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DeboraMykoluk, 2, 1
[DEBUG][2016-12-09 14:53:17,506](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cmk_colloe, 2, 1
[DEBUG][2016-12-09 14:53:17,506](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CaitlynShmatlyn, 2, 1
[DEBUG][2016-12-09 14:53:17,506](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Brandon_Blf, 2, 1
[DEBUG][2016-12-09 14:53:17,521](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ArtisticRite, 2, 1
[DEBUG][2016-12-09 14:53:17,521](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : esquire_mike, 2, 1
[DEBUG][2016-12-09 14:53:17,521](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FlanYAjo, 2, 1
[DEBUG][2016-12-09 14:53:17,537](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aktolegaming, 2, 1
[DEBUG][2016-12-09 14:53:21,053](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ekkosecurity, 2, 3
[DEBUG][2016-12-09 14:53:21,053](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BuyFilipino, 2, 3
[DEBUG][2016-12-09 14:53:21,053](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brigita_ekha, 2, 3
[DEBUG][2016-12-09 14:53:21,069](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : coopercomputer, 2, 3
[DEBUG][2016-12-09 14:53:21,069](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : galarcon_m, 2, 3
[DEBUG][2016-12-09 14:53:21,069](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dubcnews, 2, 3
[DEBUG][2016-12-09 14:53:21,084](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaExpatsInfo, 2, 3
[DEBUG][2016-12-09 14:53:21,084](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : elleneschwartz, 2, 3
[DEBUG][2016-12-09 14:53:21,084](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aubreeyyy, 2, 3
[DEBUG][2016-12-09 14:53:21,100](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : frickeradio, 2, 3
[DEBUG][2016-12-09 14:53:21,100](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : baepsehun, 2, 3
[DEBUG][2016-12-09 14:53:21,100](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CherrelJacobs, 2, 3
[DEBUG][2016-12-09 14:53:21,100](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AtorSeri, 2, 3
[DEBUG][2016-12-09 14:53:21,115](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alberti47136988, 2, 3
[DEBUG][2016-12-09 14:53:21,115](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnmolSingh1110, 2, 3
[DEBUG][2016-12-09 14:53:21,115](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Felix_KSang, 2, 3
[DEBUG][2016-12-09 14:53:21,131](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : benregez, 2, 3
[DEBUG][2016-12-09 14:53:21,131](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EdBiden, 2, 3
[DEBUG][2016-12-09 14:53:21,131](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 177
[INFO ][2016-12-09 14:53:21,131](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 14:53:21,131](CLBCalculation.java:1152) - 			EP1:359 EP2:1098 EP3:544 
[INFO ][2016-12-09 14:53:21,131](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 14:53:21,459](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 14:53:21,459](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 14:53:21,475](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 14:53:21,475](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 14:53:21,490](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 14:53:21,490](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 15:51:16,269](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 15:51:17,129](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 15:51:58,618](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 15:52:06,337](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 15:52:06,337](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 15:52:06,368](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 15:52:06,368](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 15:52:06,368](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 15:52:06,368](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 15:52:06,368](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 15:52:06,368](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 15:52:06,368](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 15:52:06,556](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 15:53:18,439](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 15:53:18,439](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 15:53:18,439](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 15:53:18,454](CLPCalculation.java:106) - 	* number of user : 1744
[INFO ][2016-12-09 15:53:21,017](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 15:53:21,017](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 15:53:21,642](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 15:53:21,642](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 15:53:21,642](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 15:53:21,642](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 15:53:21,642](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 15:53:21,642](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 15:53:21,642](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 15:53:21,658](CLBCalculation.java:194) - 		* EP1 : 51747
[DEBUG][2016-12-09 15:53:21,658](CLBCalculation.java:194) - 		* EP2 : 152051
[DEBUG][2016-12-09 15:53:21,658](CLBCalculation.java:194) - 		* EP3 : 67585
[DEBUG][2016-12-09 15:53:21,658](CLBCalculation.java:197) - 		* server total traffic : 271383
[DEBUG][2016-12-09 15:53:21,658](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 15:53:21,673](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 15:53:21,673](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 15:53:21,673](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 15:53:21,673](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 15:53:21,673](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 15:53:23,095](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 15:53:23,095](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:152051, (Expected Traffic:0,) Remain Traffic:-22051
[INFO ][2016-12-09 15:53:23,095](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:51747, (Expected Traffic:0,) Remain Traffic:78253
[INFO ][2016-12-09 15:53:23,111](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:67585, (Expected Traffic:0,) Remain Traffic:-2585
[INFO ][2016-12-09 15:53:23,127](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:603) - 		0 < surplusServerList.size() <= 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:607) - 		MEDIUM_TRAFFIC
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : freddieinstein 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : FxSnipes 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : cutee_sidharth 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AHafiz_core 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : 8dfb4f5d646346b 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Belieber12272 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : diane196030 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : cuteri22 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : giselleyygee 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ce6874 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : dominicguyot 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : diaralkaldy 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Challyadds 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Anthony51209 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ebrahiem_adams 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : christel81570 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : fakeb0yfriend 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : callmerashi 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ArchieGameDev 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : EnjaGuarda95 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ExpatGenius 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Blattahali 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : fosisnorth 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Flvckxo22 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ezchoi 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : amity_leigh 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : 123KatC 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : FiveFoldIreland 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AndreyKovalev94 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : barbie_jalo 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : DelhiNoidaProp 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : C_Z_3 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : artistic_saint 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ericamendevil 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CandaceFayee 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : dottieevans14 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CelloGirl123501 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ElysiaKrupp 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : 55cbaca85e374b1 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CBMalta 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : dongman_81 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Ejiigwuonyi 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : augmentedvisual 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : brannanscott64 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : aclavers 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Amanda_pike16 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : c_mille 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AllisonMuni 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BartvanEijden 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BelluauEmma 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BrandonLal 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : czatwins11 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BaconRules123 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : babesband 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : gaellearssn 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : bryantuck 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : abdullah_dawnak 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : EmilyLoren3 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : alrolnora 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CatherineKing10 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : 0chillwill 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AlphaPhiCSUSB 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : DrPopovicPop 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AbiReimold 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CitrusFoam 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : eloisechaplinYP 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : dianaaavee 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : driesDP 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : DiabloLeveling 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CadillacGabe 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : djmaimone 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : enjoihsu 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : EricaGeorge 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : amcdermo 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : EllaUndercover 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Film_diSpencer 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : 27rohitKumar 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CandyCrush1999 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : cardellw 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : artbyoce 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : chinchilla_206 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : emilyburchy 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BoyuZ 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : asdavis_ 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : FlorMaciel77 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AllenKnowsHIE 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : absarokaa_wyo 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CodySvoboda44 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AndrewGilligan2 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AllanVoghan 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : avkashchauhan 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : bikerushownzz 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BethanyBergArt 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Gauthierlb_ 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BrushTuArt 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : geudehradun 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Dinashawar 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Dylan_Weiding_ 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Da_SNUMack369 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : barbajulz 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CoachClive10 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AbbesDonutsFLA 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : dejesussteven11 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CarlyBlanchett 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : danielmonty2 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AllisonJ5 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AbbeyHassan 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Aalink200 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : AnoudMubaidin 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : GAlNSBOROUGH 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : EmrahSoezener23 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : CrossCultureVC 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : BeltempestBand 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Anja66T 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : DrinkandaCake 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Duncan_Bramwell 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ericaajacks 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : fa1zaI 2 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : craigmoses14 3 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : faine_goldman 3 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : brigita_ekha 3 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : Garcia_leon_ 3 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : ekkosecurity 3 -> 1
[DEBUG][2016-12-09 15:53:23,127](CLBCalculation.java:647) - 			* transferred user id : donscheibenreif 3 -> 1
[INFO ][2016-12-09 15:53:23,127](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 15:53:23,127](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 15:53:23,127](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:152051, (Expected Traffic:0,) Remain Traffic:-22051
[INFO ][2016-12-09 15:53:23,142](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:51747, (Expected Traffic:0,) Remain Traffic:78253
[INFO ][2016-12-09 15:53:23,142](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:67585, (Expected Traffic:0,) Remain Traffic:-2585
[INFO ][2016-12-09 15:53:23,158](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 15:53:23,158](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 15:53:23,174](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 15:53:23,189](CLBCalculation.java:1097) - 			EP1:359 EP2:1098 EP3:544 
[DEBUG][2016-12-09 15:53:24,486](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : freddieinstein, 2, 1
[DEBUG][2016-12-09 15:53:24,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FxSnipes, 2, 1
[DEBUG][2016-12-09 15:53:24,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cutee_sidharth, 2, 1
[DEBUG][2016-12-09 15:53:24,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AHafiz_core, 2, 1
[DEBUG][2016-12-09 15:53:24,502](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 8dfb4f5d646346b, 2, 1
[DEBUG][2016-12-09 15:53:24,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Belieber12272, 2, 1
[DEBUG][2016-12-09 15:53:24,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : diane196030, 2, 1
[DEBUG][2016-12-09 15:53:24,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cuteri22, 2, 1
[DEBUG][2016-12-09 15:53:24,517](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : giselleyygee, 2, 1
[DEBUG][2016-12-09 15:53:24,533](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ce6874, 2, 1
[DEBUG][2016-12-09 15:53:24,533](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dominicguyot, 2, 1
[DEBUG][2016-12-09 15:53:24,533](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : diaralkaldy, 2, 1
[DEBUG][2016-12-09 15:53:24,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Challyadds, 2, 1
[DEBUG][2016-12-09 15:53:24,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Anthony51209, 2, 1
[DEBUG][2016-12-09 15:53:24,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ebrahiem_adams, 2, 1
[DEBUG][2016-12-09 15:53:24,549](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : christel81570, 2, 1
[DEBUG][2016-12-09 15:53:24,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fakeb0yfriend, 2, 1
[DEBUG][2016-12-09 15:53:24,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : callmerashi, 2, 1
[DEBUG][2016-12-09 15:53:24,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ArchieGameDev, 2, 1
[DEBUG][2016-12-09 15:53:24,564](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EnjaGuarda95, 2, 1
[DEBUG][2016-12-09 15:53:24,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ExpatGenius, 2, 1
[DEBUG][2016-12-09 15:53:24,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Blattahali, 2, 1
[DEBUG][2016-12-09 15:53:24,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fosisnorth, 2, 1
[DEBUG][2016-12-09 15:53:24,580](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Flvckxo22, 2, 1
[DEBUG][2016-12-09 15:53:24,596](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ezchoi, 2, 1
[DEBUG][2016-12-09 15:53:24,596](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amity_leigh, 2, 1
[DEBUG][2016-12-09 15:53:24,596](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 123KatC, 2, 1
[DEBUG][2016-12-09 15:53:24,596](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FiveFoldIreland, 2, 1
[DEBUG][2016-12-09 15:53:24,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndreyKovalev94, 2, 1
[DEBUG][2016-12-09 15:53:24,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : barbie_jalo, 2, 1
[DEBUG][2016-12-09 15:53:24,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DelhiNoidaProp, 2, 1
[DEBUG][2016-12-09 15:53:24,611](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : C_Z_3, 2, 1
[DEBUG][2016-12-09 15:53:24,627](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : artistic_saint, 2, 1
[DEBUG][2016-12-09 15:53:24,627](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ericamendevil, 2, 1
[DEBUG][2016-12-09 15:53:24,627](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CandaceFayee, 2, 1
[DEBUG][2016-12-09 15:53:24,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dottieevans14, 2, 1
[DEBUG][2016-12-09 15:53:24,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CelloGirl123501, 2, 1
[DEBUG][2016-12-09 15:53:24,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ElysiaKrupp, 2, 1
[DEBUG][2016-12-09 15:53:24,642](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 55cbaca85e374b1, 2, 1
[DEBUG][2016-12-09 15:53:24,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CBMalta, 2, 1
[DEBUG][2016-12-09 15:53:24,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dongman_81, 2, 1
[DEBUG][2016-12-09 15:53:24,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Ejiigwuonyi, 2, 1
[DEBUG][2016-12-09 15:53:24,658](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : augmentedvisual, 2, 1
[DEBUG][2016-12-09 15:53:24,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brannanscott64, 2, 1
[DEBUG][2016-12-09 15:53:24,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : aclavers, 2, 1
[DEBUG][2016-12-09 15:53:24,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Amanda_pike16, 2, 1
[DEBUG][2016-12-09 15:53:24,674](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : c_mille, 2, 1
[DEBUG][2016-12-09 15:53:24,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllisonMuni, 2, 1
[DEBUG][2016-12-09 15:53:24,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BartvanEijden, 2, 1
[DEBUG][2016-12-09 15:53:24,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BelluauEmma, 2, 1
[DEBUG][2016-12-09 15:53:24,689](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrandonLal, 2, 1
[DEBUG][2016-12-09 15:53:24,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : czatwins11, 2, 1
[DEBUG][2016-12-09 15:53:24,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BaconRules123, 2, 1
[DEBUG][2016-12-09 15:53:24,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : babesband, 2, 1
[DEBUG][2016-12-09 15:53:24,705](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : gaellearssn, 2, 1
[DEBUG][2016-12-09 15:53:24,721](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bryantuck, 2, 1
[DEBUG][2016-12-09 15:53:24,721](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : abdullah_dawnak, 2, 1
[DEBUG][2016-12-09 15:53:24,721](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmilyLoren3, 2, 1
[DEBUG][2016-12-09 15:53:24,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alrolnora, 2, 1
[DEBUG][2016-12-09 15:53:24,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CatherineKing10, 2, 1
[DEBUG][2016-12-09 15:53:24,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 0chillwill, 2, 1
[DEBUG][2016-12-09 15:53:24,736](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AlphaPhiCSUSB, 2, 1
[DEBUG][2016-12-09 15:53:24,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DrPopovicPop, 2, 1
[DEBUG][2016-12-09 15:53:24,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AbiReimold, 2, 1
[DEBUG][2016-12-09 15:53:24,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CitrusFoam, 2, 1
[DEBUG][2016-12-09 15:53:24,752](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eloisechaplinYP, 2, 1
[DEBUG][2016-12-09 15:53:24,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dianaaavee, 2, 1
[DEBUG][2016-12-09 15:53:24,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : driesDP, 2, 1
[DEBUG][2016-12-09 15:53:24,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DiabloLeveling, 2, 1
[DEBUG][2016-12-09 15:53:24,767](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CadillacGabe, 2, 1
[DEBUG][2016-12-09 15:53:24,783](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : djmaimone, 2, 1
[DEBUG][2016-12-09 15:53:24,783](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : enjoihsu, 2, 1
[DEBUG][2016-12-09 15:53:24,783](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EricaGeorge, 2, 1
[DEBUG][2016-12-09 15:53:24,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : amcdermo, 2, 1
[DEBUG][2016-12-09 15:53:24,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EllaUndercover, 2, 1
[DEBUG][2016-12-09 15:53:24,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Film_diSpencer, 2, 1
[DEBUG][2016-12-09 15:53:24,799](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 27rohitKumar, 2, 1
[DEBUG][2016-12-09 15:53:24,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CandyCrush1999, 2, 1
[DEBUG][2016-12-09 15:53:24,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cardellw, 2, 1
[DEBUG][2016-12-09 15:53:24,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : artbyoce, 2, 1
[DEBUG][2016-12-09 15:53:24,814](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chinchilla_206, 2, 1
[DEBUG][2016-12-09 15:53:24,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : emilyburchy, 2, 1
[DEBUG][2016-12-09 15:53:24,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BoyuZ, 2, 1
[DEBUG][2016-12-09 15:53:24,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : asdavis_, 2, 1
[DEBUG][2016-12-09 15:53:24,830](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FlorMaciel77, 2, 1
[DEBUG][2016-12-09 15:53:24,846](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllenKnowsHIE, 2, 1
[DEBUG][2016-12-09 15:53:24,846](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : absarokaa_wyo, 2, 1
[DEBUG][2016-12-09 15:53:24,846](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CodySvoboda44, 2, 1
[DEBUG][2016-12-09 15:53:24,846](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AndrewGilligan2, 2, 1
[DEBUG][2016-12-09 15:53:24,861](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllanVoghan, 2, 1
[DEBUG][2016-12-09 15:53:24,861](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : avkashchauhan, 2, 1
[DEBUG][2016-12-09 15:53:24,861](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bikerushownzz, 2, 1
[DEBUG][2016-12-09 15:53:24,877](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BethanyBergArt, 2, 1
[DEBUG][2016-12-09 15:53:24,877](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Gauthierlb_, 2, 1
[DEBUG][2016-12-09 15:53:24,877](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BrushTuArt, 2, 1
[DEBUG][2016-12-09 15:53:24,924](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : geudehradun, 2, 1
[DEBUG][2016-12-09 15:53:24,924](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dinashawar, 2, 1
[DEBUG][2016-12-09 15:53:24,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dylan_Weiding_, 2, 1
[DEBUG][2016-12-09 15:53:24,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Da_SNUMack369, 2, 1
[DEBUG][2016-12-09 15:53:24,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : barbajulz, 2, 1
[DEBUG][2016-12-09 15:53:24,939](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CoachClive10, 2, 1
[DEBUG][2016-12-09 15:53:24,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AbbesDonutsFLA, 2, 1
[DEBUG][2016-12-09 15:53:24,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dejesussteven11, 2, 1
[DEBUG][2016-12-09 15:53:24,955](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CarlyBlanchett, 2, 1
[DEBUG][2016-12-09 15:53:24,971](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : danielmonty2, 2, 1
[DEBUG][2016-12-09 15:53:24,971](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AllisonJ5, 2, 1
[DEBUG][2016-12-09 15:53:24,971](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AbbeyHassan, 2, 1
[DEBUG][2016-12-09 15:53:24,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Aalink200, 2, 1
[DEBUG][2016-12-09 15:53:24,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnoudMubaidin, 2, 1
[DEBUG][2016-12-09 15:53:24,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GAlNSBOROUGH, 2, 1
[DEBUG][2016-12-09 15:53:24,986](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmrahSoezener23, 2, 1
[DEBUG][2016-12-09 15:53:25,002](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CrossCultureVC, 2, 1
[DEBUG][2016-12-09 15:53:25,002](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BeltempestBand, 2, 1
[DEBUG][2016-12-09 15:53:25,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Anja66T, 2, 1
[DEBUG][2016-12-09 15:53:25,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DrinkandaCake, 2, 1
[DEBUG][2016-12-09 15:53:25,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Duncan_Bramwell, 2, 1
[DEBUG][2016-12-09 15:53:25,017](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ericaajacks, 2, 1
[DEBUG][2016-12-09 15:53:25,033](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : fa1zaI, 2, 1
[DEBUG][2016-12-09 15:53:25,033](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : craigmoses14, 3, 1
[DEBUG][2016-12-09 15:53:25,033](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : faine_goldman, 3, 1
[DEBUG][2016-12-09 15:53:25,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : brigita_ekha, 3, 1
[DEBUG][2016-12-09 15:53:25,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Garcia_leon_, 3, 1
[DEBUG][2016-12-09 15:53:25,049](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ekkosecurity, 3, 1
[DEBUG][2016-12-09 15:53:25,064](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : donscheibenreif, 3, 1
[DEBUG][2016-12-09 15:53:27,737](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 124
[INFO ][2016-12-09 15:53:27,737](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 15:53:27,737](CLBCalculation.java:1152) - 			EP1:483 EP2:980 EP3:538 
[INFO ][2016-12-09 15:53:27,752](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 15:53:28,159](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 15:53:28,174](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 15:53:28,174](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 15:53:28,174](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 15:53:28,190](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 15:53:28,190](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 16:51:04,373](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 16:51:21,125](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 16:51:23,609](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 16:51:47,331](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 16:51:47,346](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 16:51:47,377](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 16:51:47,377](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 16:51:47,377](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 16:51:47,377](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 16:51:47,377](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 16:51:47,393](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 16:51:47,393](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 16:51:47,487](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 16:52:58,823](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 16:52:58,823](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 16:52:58,823](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 16:52:58,838](CLPCalculation.java:106) - 	* number of user : 1758
[INFO ][2016-12-09 16:53:01,276](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 16:53:01,292](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 16:53:01,901](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 16:53:01,901](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 16:53:01,901](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 16:53:01,901](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 16:53:01,901](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 16:53:01,901](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 16:53:01,901](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 16:53:01,917](CLBCalculation.java:194) - 		* EP1 : 67370
[DEBUG][2016-12-09 16:53:01,917](CLBCalculation.java:194) - 		* EP2 : 133308
[DEBUG][2016-12-09 16:53:01,917](CLBCalculation.java:194) - 		* EP3 : 64989
[DEBUG][2016-12-09 16:53:01,917](CLBCalculation.java:197) - 		* server total traffic : 265667
[DEBUG][2016-12-09 16:53:01,917](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 16:53:01,917](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 16:53:01,917](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 16:53:01,932](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 16:53:01,932](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 16:53:01,932](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 16:53:03,323](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 16:53:03,323](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:64989, (Expected Traffic:0,) Remain Traffic:11
[INFO ][2016-12-09 16:53:03,339](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:67370, (Expected Traffic:0,) Remain Traffic:62630
[INFO ][2016-12-09 16:53:03,339](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:133308, (Expected Traffic:0,) Remain Traffic:-3308
[INFO ][2016-12-09 16:53:03,354](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:702) - 		surplusServerList.size() > 1
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:706) - 		* traffic type : * MEDIUM_TRAFFIC 

[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 16:53:03,354](CLBCalculation.java:721) - 		Priority 1. social + distance
[INFO ][2016-12-09 16:53:03,354](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 16:53:03,354](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 16:53:03,370](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:64989, (Expected Traffic:0,) Remain Traffic:11
[INFO ][2016-12-09 16:53:03,370](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:67370, (Expected Traffic:0,) Remain Traffic:62630
[INFO ][2016-12-09 16:53:03,386](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:133308, (Expected Traffic:0,) Remain Traffic:-3308
[INFO ][2016-12-09 16:53:03,386](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 16:53:03,401](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 16:53:03,417](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 16:53:03,432](CLBCalculation.java:1097) - 			EP1:483 EP2:980 EP3:538 
[DEBUG][2016-12-09 16:53:05,339](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CookieThunder13, 2, 1
[DEBUG][2016-12-09 16:53:05,339](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anyanildefonso, 2, 1
[DEBUG][2016-12-09 16:53:05,339](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Doigenstein, 2, 1
[DEBUG][2016-12-09 16:53:05,339](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : enicar_, 2, 1
[DEBUG][2016-12-09 16:53:05,355](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : duncanmbodze2, 2, 1
[DEBUG][2016-12-09 16:53:05,355](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Dinewithjemutai, 2, 1
[DEBUG][2016-12-09 16:53:05,355](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DonBaney111, 2, 1
[DEBUG][2016-12-09 16:53:05,355](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : anggersatya, 2, 1
[DEBUG][2016-12-09 16:53:05,370](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : CiaMundung, 2, 1
[DEBUG][2016-12-09 16:53:05,370](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ColdironCassie, 2, 1
[DEBUG][2016-12-09 16:53:05,370](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : antarcticdinos, 2, 1
[DEBUG][2016-12-09 16:53:05,370](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DiscoverWarren, 2, 1
[DEBUG][2016-12-09 16:53:05,386](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Bakhiter, 2, 1
[DEBUG][2016-12-09 16:53:05,386](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AranoKj, 2, 1
[DEBUG][2016-12-09 16:53:08,152](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 14
[INFO ][2016-12-09 16:53:08,152](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 16:53:08,152](CLBCalculation.java:1152) - 			EP1:497 EP2:966 EP3:538 
[INFO ][2016-12-09 16:53:08,167](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 16:53:08,511](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 16:53:08,527](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 16:53:08,527](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 16:53:08,542](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 16:53:08,542](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 16:53:08,542](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 17:51:10,463](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 17:51:25,386](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 17:51:31,184](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 17:51:54,592](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 17:51:54,592](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 17:51:54,717](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 17:51:54,717](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 17:51:54,717](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 17:51:54,717](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 17:51:54,733](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 17:51:54,733](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 17:51:54,733](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 17:51:54,983](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 17:53:15,742](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 17:53:15,742](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 17:53:15,757](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 17:53:15,773](CLPCalculation.java:106) - 	* number of user : 1751
[INFO ][2016-12-09 17:53:18,289](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 17:53:18,304](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 17:53:18,898](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 17:53:18,914](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 17:53:18,914](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 17:53:18,914](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 17:53:18,914](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 17:53:18,914](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 17:53:18,914](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 17:53:18,929](CLBCalculation.java:194) - 		* EP1 : 67415
[DEBUG][2016-12-09 17:53:18,929](CLBCalculation.java:194) - 		* EP2 : 129282
[DEBUG][2016-12-09 17:53:18,929](CLBCalculation.java:194) - 		* EP3 : 64038
[DEBUG][2016-12-09 17:53:18,929](CLBCalculation.java:197) - 		* server total traffic : 260735
[DEBUG][2016-12-09 17:53:18,929](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 17:53:18,945](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 17:53:18,945](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 17:53:18,945](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 17:53:18,945](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 17:53:18,945](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 17:53:18,945](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 17:53:18,961](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 17:53:18,976](CLBCalculation.java:1097) - 			EP1:497 EP2:966 EP3:538 
[DEBUG][2016-12-09 17:53:23,696](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 17:53:23,696](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 17:53:23,711](CLBCalculation.java:1152) - 			EP1:497 EP2:966 EP3:538 
[INFO ][2016-12-09 17:53:23,711](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 17:53:24,118](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 17:53:24,133](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 17:53:24,133](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 17:53:24,149](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 17:53:24,149](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 17:53:24,149](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 18:51:17,443](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 18:51:29,944](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 18:51:41,258](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 18:52:01,604](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 18:52:01,635](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 18:52:01,635](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 18:52:01,635](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 18:52:01,651](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 18:52:01,651](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 18:52:01,651](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 18:52:01,651](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 18:52:01,651](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 18:52:01,932](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 18:53:13,378](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 18:53:13,378](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 18:53:13,378](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 18:53:13,393](CLPCalculation.java:106) - 	* number of user : 1741
[INFO ][2016-12-09 18:53:16,049](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 18:53:16,065](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 18:53:16,659](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 18:53:16,659](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 18:53:16,659](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 18:53:16,659](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 18:53:16,659](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 18:53:16,659](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 18:53:16,659](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 18:53:16,675](CLBCalculation.java:194) - 		* EP1 : 68334
[DEBUG][2016-12-09 18:53:16,675](CLBCalculation.java:194) - 		* EP2 : 130870
[DEBUG][2016-12-09 18:53:16,675](CLBCalculation.java:194) - 		* EP3 : 64655
[DEBUG][2016-12-09 18:53:16,675](CLBCalculation.java:197) - 		* server total traffic : 263859
[DEBUG][2016-12-09 18:53:16,690](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 18:53:16,690](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 18:53:16,690](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 18:53:16,690](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 18:53:16,690](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 18:53:16,690](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 18:53:18,112](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 18:53:18,112](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:64655, (Expected Traffic:0,) Remain Traffic:345
[INFO ][2016-12-09 18:53:18,112](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:68334, (Expected Traffic:0,) Remain Traffic:61666
[INFO ][2016-12-09 18:53:18,128](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:130870, (Expected Traffic:0,) Remain Traffic:-870
[INFO ][2016-12-09 18:53:18,128](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 18:53:18,143](CLBCalculation.java:702) - 		surplusServerList.size() > 1
[DEBUG][2016-12-09 18:53:18,143](CLBCalculation.java:706) - 		* traffic type : * MEDIUM_TRAFFIC 

[DEBUG][2016-12-09 18:53:18,143](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 18:53:18,143](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 18:53:18,143](CLBCalculation.java:721) - 		Priority 1. social + distance
[DEBUG][2016-12-09 18:53:18,143](CLBCalculation.java:721) - 		Priority 1. social + distance
[INFO ][2016-12-09 18:53:18,143](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 18:53:18,143](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 18:53:18,143](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:64655, (Expected Traffic:0,) Remain Traffic:345
[INFO ][2016-12-09 18:53:18,159](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:68334, (Expected Traffic:0,) Remain Traffic:61666
[INFO ][2016-12-09 18:53:18,159](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:130870, (Expected Traffic:0,) Remain Traffic:-870
[INFO ][2016-12-09 18:53:18,175](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 18:53:18,175](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 18:53:18,206](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 18:53:18,222](CLBCalculation.java:1097) - 			EP1:497 EP2:966 EP3:538 
[DEBUG][2016-12-09 18:53:20,112](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : chiefjacqueline, 2, 1
[DEBUG][2016-12-09 18:53:20,112](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cesarhernandz23, 2, 1
[DEBUG][2016-12-09 18:53:22,925](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : edennigeria, 2, 3
[DEBUG][2016-12-09 18:53:22,925](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bonganinhlapo17, 2, 3
[DEBUG][2016-12-09 18:53:22,925](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 4
[INFO ][2016-12-09 18:53:22,925](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 18:53:22,941](CLBCalculation.java:1152) - 			EP1:499 EP2:962 EP3:540 
[INFO ][2016-12-09 18:53:22,941](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 18:53:23,254](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 18:53:23,254](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 18:53:23,269](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 18:53:23,285](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 18:53:23,285](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 18:53:23,285](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 19:51:24,877](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 19:51:35,409](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 19:51:53,630](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 19:52:14,069](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 19:52:14,101](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-09 19:52:14,101](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-09 19:52:14,101](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 19:52:14,116](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 19:52:14,116](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 19:52:14,116](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 19:52:14,116](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 19:52:14,116](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 19:52:14,273](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 19:53:26,406](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 19:53:26,406](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 19:53:26,421](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 19:53:26,437](CLPCalculation.java:106) - 	* number of user : 1724
[INFO ][2016-12-09 19:53:28,952](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 19:53:28,952](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 19:53:29,578](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 19:53:29,578](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 19:53:29,578](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 19:53:29,578](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 19:53:29,578](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 19:53:29,578](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 19:53:29,578](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:194) - 		* EP1 : 70661
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:194) - 		* EP2 : 135085
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:194) - 		* EP3 : 66936
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:197) - 		* server total traffic : 272682
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 19:53:29,593](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 19:53:29,593](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 19:53:29,593](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 19:53:29,609](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 19:53:31,031](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 19:53:31,031](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:66936, (Expected Traffic:0,) Remain Traffic:-1936
[INFO ][2016-12-09 19:53:31,031](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:70661, (Expected Traffic:0,) Remain Traffic:59339
[INFO ][2016-12-09 19:53:31,047](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:135085, (Expected Traffic:0,) Remain Traffic:-5085
[INFO ][2016-12-09 19:53:31,047](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:603) - 		0 < surplusServerList.size() <= 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:607) - 		MEDIUM_TRAFFIC
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : edennigeria 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : 12jessicasims 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : AnmolSingh1110 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : baepsehun 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : cbouchard6824 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : eduardsputra 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : bonganinhlapo17 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : Chivalme 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : frickeradio 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : elleneschwartz 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : galarcon_m 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : BenStands 3 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : EnockDejavu 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : dianerule 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : djitallkenya 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : dipishrai 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : FAN717 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : atwalls 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : corentinandrea 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : DancunAwitty 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : GeoOptimization 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : freeseDreams 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : FrediZohar 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : becca_xpp 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : digitalmaximal 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : BarthMoc 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : akumu_stephen 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : dx_camille 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : EmelineVln 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : b_money888 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : docarsenic 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : entropy_phi 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : daanblaack 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : erikneue 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : beesleys1 2 -> 1
[DEBUG][2016-12-09 19:53:31,062](CLBCalculation.java:647) - 			* transferred user id : DexterLabP 2 -> 1
[INFO ][2016-12-09 19:53:31,062](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 19:53:31,062](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 19:53:31,062](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:66936, (Expected Traffic:0,) Remain Traffic:-1936
[INFO ][2016-12-09 19:53:31,078](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:70661, (Expected Traffic:0,) Remain Traffic:59339
[INFO ][2016-12-09 19:53:31,078](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:135085, (Expected Traffic:0,) Remain Traffic:-5085
[INFO ][2016-12-09 19:53:31,078](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 19:53:31,093](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 19:53:31,109](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 19:53:31,125](CLBCalculation.java:1097) - 			EP1:499 EP2:962 EP3:540 
[DEBUG][2016-12-09 19:53:33,016](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : edennigeria, 3, 1
[DEBUG][2016-12-09 19:53:33,031](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 12jessicasims, 3, 1
[DEBUG][2016-12-09 19:53:33,031](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : AnmolSingh1110, 3, 1
[DEBUG][2016-12-09 19:53:33,031](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : baepsehun, 3, 1
[DEBUG][2016-12-09 19:53:33,047](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : cbouchard6824, 3, 1
[DEBUG][2016-12-09 19:53:33,047](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : eduardsputra, 3, 1
[DEBUG][2016-12-09 19:53:33,047](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : bonganinhlapo17, 3, 1
[DEBUG][2016-12-09 19:53:33,047](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Chivalme, 3, 1
[DEBUG][2016-12-09 19:53:33,062](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : frickeradio, 3, 1
[DEBUG][2016-12-09 19:53:33,062](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : elleneschwartz, 3, 1
[DEBUG][2016-12-09 19:53:33,062](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : galarcon_m, 3, 1
[DEBUG][2016-12-09 19:53:33,078](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BenStands, 3, 1
[DEBUG][2016-12-09 19:53:33,078](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EnockDejavu, 2, 1
[DEBUG][2016-12-09 19:53:33,078](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dianerule, 2, 1
[DEBUG][2016-12-09 19:53:33,094](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : djitallkenya, 2, 1
[DEBUG][2016-12-09 19:53:33,094](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dipishrai, 2, 1
[DEBUG][2016-12-09 19:53:33,094](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FAN717, 2, 1
[DEBUG][2016-12-09 19:53:33,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : atwalls, 2, 1
[DEBUG][2016-12-09 19:53:33,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : corentinandrea, 2, 1
[DEBUG][2016-12-09 19:53:33,109](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DancunAwitty, 2, 1
[DEBUG][2016-12-09 19:53:33,125](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : GeoOptimization, 2, 1
[DEBUG][2016-12-09 19:53:33,125](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : freeseDreams, 2, 1
[DEBUG][2016-12-09 19:53:33,156](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : FrediZohar, 2, 1
[DEBUG][2016-12-09 19:53:33,172](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : becca_xpp, 2, 1
[DEBUG][2016-12-09 19:53:33,172](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : digitalmaximal, 2, 1
[DEBUG][2016-12-09 19:53:33,172](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : BarthMoc, 2, 1
[DEBUG][2016-12-09 19:53:33,172](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : akumu_stephen, 2, 1
[DEBUG][2016-12-09 19:53:33,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : dx_camille, 2, 1
[DEBUG][2016-12-09 19:53:33,187](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : EmelineVln, 2, 1
[DEBUG][2016-12-09 19:53:33,203](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : b_money888, 2, 1
[DEBUG][2016-12-09 19:53:33,203](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : docarsenic, 2, 1
[DEBUG][2016-12-09 19:53:33,203](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : entropy_phi, 2, 1
[DEBUG][2016-12-09 19:53:33,219](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : daanblaack, 2, 1
[DEBUG][2016-12-09 19:53:33,219](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : erikneue, 2, 1
[DEBUG][2016-12-09 19:53:33,234](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : beesleys1, 2, 1
[DEBUG][2016-12-09 19:53:33,234](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DexterLabP, 2, 1
[DEBUG][2016-12-09 19:53:35,938](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 36
[INFO ][2016-12-09 19:53:35,938](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 19:53:35,953](CLBCalculation.java:1152) - 			EP1:535 EP2:938 EP3:528 
[INFO ][2016-12-09 19:53:35,953](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 19:53:36,329](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 19:53:36,329](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 19:53:36,329](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 19:53:36,344](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 19:53:36,344](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 19:53:36,344](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 20:51:32,154](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 20:51:40,874](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 20:52:06,298](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 20:52:19,315](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 20:52:19,347](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 20:52:19,347](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 20:52:19,347](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 20:52:19,347](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 20:52:19,347](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 20:52:19,347](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 20:52:19,347](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 20:52:19,347](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 20:52:19,534](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 20:53:30,542](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 20:53:30,542](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 20:53:30,542](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 20:53:30,573](CLPCalculation.java:106) - 	* number of user : 1723
[INFO ][2016-12-09 20:53:33,058](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 20:53:33,058](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 20:53:33,651](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 20:53:33,651](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 20:53:33,651](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 20:53:33,651](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 20:53:33,651](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 20:53:33,651](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 20:53:33,667](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:194) - 		* EP1 : 75394
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:194) - 		* EP2 : 131013
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:194) - 		* EP3 : 65353
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:197) - 		* server total traffic : 271760
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 20:53:33,698](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 20:53:33,698](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 20:53:33,698](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 20:53:33,714](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 20:53:35,167](CLBCalculation.java:349) - 	* before rematching process
[INFO ][2016-12-09 20:53:35,167](CLBCalculation.java:353) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:65353, (Expected Traffic:0,) Remain Traffic:-353
[INFO ][2016-12-09 20:53:35,183](CLBCalculation.java:353) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:75394, (Expected Traffic:0,) Remain Traffic:54606
[INFO ][2016-12-09 20:53:35,183](CLBCalculation.java:353) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:131013, (Expected Traffic:0,) Remain Traffic:-1013
[INFO ][2016-12-09 20:53:35,183](CLBCalculation.java:597) - 	[rematchUsersToCloud method] - Start
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:603) - 		0 < surplusServerList.size() <= 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:607) - 		MEDIUM_TRAFFIC
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : Cell_met 3 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : Benoit_Lavier 3 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : DohaExpat 3 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : franklychilli 3 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : charlottemlld 2 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : alexarungah 2 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : 1tstreets_187 2 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : ahvenaisesi 2 -> 1
[DEBUG][2016-12-09 20:53:35,199](CLBCalculation.java:647) - 			* transferred user id : furkantomasoglu 2 -> 1
[INFO ][2016-12-09 20:53:35,199](CLBCalculation.java:1075) - 	[rematchUsersToCloud method] - End
[INFO ][2016-12-09 20:53:35,199](CLBCalculation.java:426) - 	* after rematching process
[INFO ][2016-12-09 20:53:35,199](CLBCalculation.java:430) - 		EP no.:3, Maximum Traffic:65000, Current Traffic:65353, (Expected Traffic:0,) Remain Traffic:-353
[INFO ][2016-12-09 20:53:35,214](CLBCalculation.java:430) - 		EP no.:1, Maximum Traffic:130000, Current Traffic:75394, (Expected Traffic:0,) Remain Traffic:54606
[INFO ][2016-12-09 20:53:35,214](CLBCalculation.java:430) - 		EP no.:2, Maximum Traffic:130000, Current Traffic:131013, (Expected Traffic:0,) Remain Traffic:-1013
[INFO ][2016-12-09 20:53:35,230](CLBCalculation.java:446) - 	[rematchForLoadBalancing method] - End
[INFO ][2016-12-09 20:53:35,230](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 20:53:35,246](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 20:53:35,261](CLBCalculation.java:1097) - 			EP1:535 EP2:938 EP3:528 
[DEBUG][2016-12-09 20:53:37,371](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Cell_met, 3, 1
[DEBUG][2016-12-09 20:53:37,386](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : Benoit_Lavier, 3, 1
[DEBUG][2016-12-09 20:53:37,386](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : DohaExpat, 3, 1
[DEBUG][2016-12-09 20:53:37,386](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : franklychilli, 3, 1
[DEBUG][2016-12-09 20:53:37,402](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : charlottemlld, 2, 1
[DEBUG][2016-12-09 20:53:37,402](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : alexarungah, 2, 1
[DEBUG][2016-12-09 20:53:37,402](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : 1tstreets_187, 2, 1
[DEBUG][2016-12-09 20:53:37,418](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : ahvenaisesi, 2, 1
[DEBUG][2016-12-09 20:53:37,418](CLBCalculation.java:1125) -  			- same user id -> update broker giver table (UserId, PrevCloudNo, CloudNo) : furkantomasoglu, 2, 1
[DEBUG][2016-12-09 20:53:39,871](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 9
[INFO ][2016-12-09 20:53:39,871](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 20:53:39,887](CLBCalculation.java:1152) - 			EP1:544 EP2:933 EP3:524 
[INFO ][2016-12-09 20:53:39,887](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 20:53:40,340](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 20:53:40,340](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 20:53:40,355](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 20:53:40,355](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 20:53:40,355](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 20:53:40,371](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 21:51:16,648](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 21:51:39,697](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 21:51:46,479](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 21:52:03,950](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 21:52:03,965](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 21:52:03,997](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 21:52:03,997](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 21:52:03,997](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 21:52:03,997](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 21:52:03,997](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 21:52:04,012](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 21:52:04,012](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 21:52:04,169](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 21:53:13,801](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 21:53:13,801](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 21:53:13,801](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 21:53:13,817](CLPCalculation.java:106) - 	* number of user : 1714
[INFO ][2016-12-09 21:53:16,270](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 21:53:16,270](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 21:53:16,864](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 21:53:16,864](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 21:53:16,864](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 21:53:16,864](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 21:53:16,864](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 21:53:16,864](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 21:53:16,864](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 21:53:16,879](CLBCalculation.java:194) - 		* EP1 : 72796
[DEBUG][2016-12-09 21:53:16,879](CLBCalculation.java:194) - 		* EP2 : 125139
[DEBUG][2016-12-09 21:53:16,879](CLBCalculation.java:194) - 		* EP3 : 62449
[DEBUG][2016-12-09 21:53:16,879](CLBCalculation.java:197) - 		* server total traffic : 260384
[DEBUG][2016-12-09 21:53:16,879](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 21:53:16,895](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 21:53:16,895](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 21:53:16,895](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 21:53:16,895](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 21:53:16,895](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 21:53:16,895](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 21:53:16,911](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 21:53:16,926](CLBCalculation.java:1097) - 			EP1:544 EP2:933 EP3:524 
[DEBUG][2016-12-09 21:53:21,396](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 21:53:21,396](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 21:53:21,396](CLBCalculation.java:1152) - 			EP1:544 EP2:933 EP3:524 
[INFO ][2016-12-09 21:53:21,396](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 21:53:21,818](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 21:53:21,818](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 21:53:21,818](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 21:53:21,833](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 21:53:21,833](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 21:53:21,849](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 22:51:26,941](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 22:51:47,443](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 22:51:52,225](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 22:52:10,508](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 22:52:10,540](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 22:52:10,540](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 22:52:10,540](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 22:52:10,540](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 22:52:10,540](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 22:52:10,555](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 22:52:10,555](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 22:52:10,555](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 22:52:10,712](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 22:53:26,532](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 22:53:26,532](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 22:53:26,532](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 22:53:26,548](CLPCalculation.java:106) - 	* number of user : 1676
[INFO ][2016-12-09 22:53:29,064](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 22:53:29,064](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 22:53:29,626](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 22:53:29,626](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 22:53:29,626](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 22:53:29,626](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 22:53:29,626](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 22:53:29,626](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 22:53:29,626](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:194) - 		* EP1 : 69275
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:194) - 		* EP2 : 119245
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:194) - 		* EP3 : 59529
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:197) - 		* server total traffic : 248049
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 22:53:29,642](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 22:53:29,642](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 22:53:29,642](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 22:53:29,657](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 22:53:29,657](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 22:53:29,673](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 22:53:29,673](CLBCalculation.java:1097) - 			EP1:544 EP2:933 EP3:524 
[DEBUG][2016-12-09 22:53:34,486](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 22:53:34,486](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 22:53:34,502](CLBCalculation.java:1152) - 			EP1:544 EP2:933 EP3:524 
[INFO ][2016-12-09 22:53:34,502](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 22:53:34,893](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 22:53:34,893](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 22:53:34,908](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 22:53:34,924](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 22:53:34,924](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 22:53:34,924](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-09 23:51:37,969](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 23:51:57,862](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 23:51:58,143](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-09 23:52:17,989](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-09 23:52:17,989](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[DEBUG][2016-12-09 23:52:18,020](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-09 23:52:18,020](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-09 23:52:18,020](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[INFO ][2016-12-09 23:52:18,020](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-09 23:52:18,036](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-09 23:52:18,036](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-09 23:52:18,036](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-09 23:52:18,239](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-09 23:53:23,465](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-09 23:53:23,465](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-09 23:53:23,465](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-09 23:53:23,480](CLPCalculation.java:106) - 	* number of user : 1623
[INFO ][2016-12-09 23:53:25,856](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-09 23:53:25,856](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-09 23:53:26,387](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-09 23:53:26,387](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-09 23:53:26,387](CLBCalculation.java:47) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-09 23:53:26,387](CLBCalculation.java:48) - 	* current map.size() : 3
[DEBUG][2016-12-09 23:53:26,387](CLBCalculation.java:52) - [CLBCalculation constructor] - End 

[INFO ][2016-12-09 23:53:26,387](CLBCalculation.java:58) - [lbMain method] - Start
[INFO ][2016-12-09 23:53:26,387](CLBCalculation.java:188) - 	[determineProcessType method] - Start
[DEBUG][2016-12-09 23:53:26,402](CLBCalculation.java:194) - 		* EP1 : 64508
[DEBUG][2016-12-09 23:53:26,402](CLBCalculation.java:194) - 		* EP2 : 111049
[DEBUG][2016-12-09 23:53:26,402](CLBCalculation.java:194) - 		* EP3 : 55964
[DEBUG][2016-12-09 23:53:26,402](CLBCalculation.java:197) - 		* server total traffic : 231521
[DEBUG][2016-12-09 23:53:26,418](CLBCalculation.java:200) - 		* total capacity of clouds : 325000.0
[DEBUG][2016-12-09 23:53:26,418](CLBCalculation.java:203) - 		* minimum capacity of Clouds : 65000.0
[INFO ][2016-12-09 23:53:26,418](CLBCalculation.java:216) - 	[determineProcessType method] - End
[DEBUG][2016-12-09 23:53:26,418](CLBCalculation.java:76) - 	* MEDIUM_TRAFFIC 

[INFO ][2016-12-09 23:53:26,418](CLBCalculation.java:488) - 	[rematchForLoadBalancing method] - Start
[DEBUG][2016-12-09 23:53:26,418](CLBCalculation.java:501) - is NOT First! (Medium)
[INFO ][2016-12-09 23:53:26,418](CLBCalculation.java:1079) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-09 23:53:26,434](CLBCalculation.java:1087) -  		* before update : number of user at each cloud
[INFO ][2016-12-09 23:53:26,449](CLBCalculation.java:1097) - 			EP1:544 EP2:933 EP3:524 
[DEBUG][2016-12-09 23:53:31,262](CLBCalculation.java:1137) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-09 23:53:31,262](CLBCalculation.java:1142) - 		* after update : number of user at each cloud
[INFO ][2016-12-09 23:53:31,262](CLBCalculation.java:1152) - 			EP1:544 EP2:933 EP3:524 
[INFO ][2016-12-09 23:53:31,278](CLBCalculation.java:1156) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-09 23:53:31,606](CLBCalculation.java:109) - [lbMain method] - End 

[INFO ][2016-12-09 23:53:31,606](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-09 23:53:31,606](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-09 23:53:31,622](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-09 23:53:31,622](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-09 23:53:31,622](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

