[INFO ][2016-12-06 13:10:30,308](CBroker.java:47) - ========================================================================================================
[INFO ][2016-12-06 13:10:30,308](CBroker.java:48) - ============================================= BROKER START =============================================
[INFO ][2016-12-06 13:10:30,308](CBroker.java:49) - ========================================================================================================

[INFO ][2016-12-06 13:10:30,324](CLPCalculation.java:413) - LP Thread is Running Now..
[INFO ][2016-12-06 13:10:30,324](CLPCalculation.java:24) - check the number of receiving monitored data 

[INFO ][2016-12-06 13:10:30,324](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 13:10:30,339](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 13:10:30,339](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 13:10:30,355](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 13:51:24,759](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 13:51:26,149](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 13:51:47,777](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 13:51:47,933](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 13:51:57,372](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 13:51:57,434](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 13:51:57,434](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 13:51:57,434](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 13:51:57,434](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 13:51:57,450](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 13:51:57,450](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 13:51:57,450](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 13:51:57,450](CInitPrevMatch.java:12) - Initialize previous match - start
[DEBUG][2016-12-06 13:51:57,465](CInitPrevMatch.java:32) - 	Number of users : 44
[DEBUG][2016-12-06 13:51:57,465](CInitPrevMatch.java:33) - 	Previous match size : 44
[DEBUG][2016-12-06 13:51:57,465](CInitPrevMatch.java:34) - Initialize previous match - end
[DEBUG][2016-12-06 13:51:57,668](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 13:51:59,559](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 13:51:59,559](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 13:51:59,559](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 13:51:59,559](CLPCalculation.java:106) - 	* number of user : 44
[INFO ][2016-12-06 13:51:59,653](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 13:51:59,653](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 13:51:59,669](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 13:51:59,684](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 13:51:59,684](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 13:51:59,684](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 13:51:59,684](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 13:51:59,684](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 13:51:59,684](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 13:51:59,684](CLBCalculation.java:184) - 		* EP1 : 3184
[DEBUG][2016-12-06 13:51:59,700](CLBCalculation.java:184) - 		* EP2 : 867
[DEBUG][2016-12-06 13:51:59,700](CLBCalculation.java:184) - 		* EP3 : 2860
[DEBUG][2016-12-06 13:51:59,716](CLBCalculation.java:187) - 		* server total traffic : 6911
[DEBUG][2016-12-06 13:51:59,716](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 13:51:59,716](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 13:51:59,716](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 13:51:59,716](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 13:51:59,809](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 13:51:59,825](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 13:51:59,825](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 13:52:00,059](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 13:52:00,059](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 13:52:00,075](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 13:52:00,075](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 13:52:00,341](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 13:52:00,341](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 13:52:00,356](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 13:52:00,356](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 13:52:00,372](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 13:52:00,372](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 14:51:25,223](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 14:51:26,895](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 14:51:48,257](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 14:51:48,335](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 14:51:57,898](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 14:51:57,945](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 14:51:57,945](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 14:51:57,945](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 14:51:57,961](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 14:51:57,961](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 14:51:57,961](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 14:51:57,961](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 14:51:58,117](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 14:52:00,539](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 14:52:00,539](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 14:52:00,555](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 14:52:00,555](CLPCalculation.java:106) - 	* number of user : 49
[INFO ][2016-12-06 14:52:00,680](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 14:52:00,695](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 14:52:00,695](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 14:52:00,695](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 14:52:00,695](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 14:52:00,695](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 14:52:00,695](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 14:52:00,695](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 14:52:00,711](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 14:52:00,711](CLBCalculation.java:184) - 		* EP1 : 3830
[DEBUG][2016-12-06 14:52:00,711](CLBCalculation.java:184) - 		* EP2 : 932
[DEBUG][2016-12-06 14:52:00,727](CLBCalculation.java:184) - 		* EP3 : 3158
[DEBUG][2016-12-06 14:52:00,727](CLBCalculation.java:187) - 		* server total traffic : 7920
[DEBUG][2016-12-06 14:52:00,727](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 14:52:00,727](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 14:52:00,727](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 14:52:00,727](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 14:52:00,820](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 14:52:00,836](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 14:52:00,836](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 14:52:01,133](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 14:52:01,133](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 14:52:01,133](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 14:52:01,133](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 14:52:01,493](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 14:52:01,493](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 14:52:01,508](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 14:52:01,508](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 14:52:01,508](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 14:52:01,524](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 15:51:25,703](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 15:51:27,578](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 15:51:48,752](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 15:51:48,799](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 15:51:58,362](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 15:51:58,425](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 15:51:58,425](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 15:51:58,425](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 15:51:58,425](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 15:51:58,425](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 15:51:58,425](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 15:51:58,425](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 15:51:58,644](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 15:52:01,097](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 15:52:01,097](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 15:52:01,097](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 15:52:01,113](CLPCalculation.java:106) - 	* number of user : 52
[INFO ][2016-12-06 15:52:01,206](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 15:52:01,206](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 15:52:01,222](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 15:52:01,238](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 15:52:01,238](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 15:52:01,238](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 15:52:01,238](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 15:52:01,238](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 15:52:01,238](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 15:52:01,238](CLBCalculation.java:184) - 		* EP1 : 3920
[DEBUG][2016-12-06 15:52:01,253](CLBCalculation.java:184) - 		* EP2 : 1174
[DEBUG][2016-12-06 15:52:01,253](CLBCalculation.java:184) - 		* EP3 : 3447
[DEBUG][2016-12-06 15:52:01,253](CLBCalculation.java:187) - 		* server total traffic : 8541
[DEBUG][2016-12-06 15:52:01,253](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 15:52:01,253](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 15:52:01,253](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 15:52:01,253](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 15:52:01,378](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 15:52:01,394](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 15:52:01,394](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 15:52:01,644](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 15:52:01,644](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 15:52:01,644](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 15:52:01,660](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 15:52:01,941](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 15:52:01,941](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 15:52:01,957](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 15:52:01,957](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 15:52:01,957](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 15:52:01,972](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 16:50:58,867](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 16:51:00,492](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 16:51:26,167](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 16:51:26,229](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 16:51:49,216](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 16:51:49,279](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 16:51:49,279](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 16:51:49,279](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 16:51:49,279](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 16:51:49,279](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 16:51:49,279](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 16:51:49,279](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 16:51:49,513](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 16:51:51,826](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 16:51:51,826](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 16:51:51,826](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 16:51:51,826](CLPCalculation.java:106) - 	* number of user : 53
[INFO ][2016-12-06 16:51:51,888](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 16:51:51,888](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 16:51:51,888](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 16:51:51,904](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 16:51:51,904](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 16:51:51,904](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 16:51:51,904](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 16:51:51,904](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 16:51:51,904](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 16:51:51,904](CLBCalculation.java:184) - 		* EP1 : 4156
[DEBUG][2016-12-06 16:51:51,920](CLBCalculation.java:184) - 		* EP2 : 1268
[DEBUG][2016-12-06 16:51:51,920](CLBCalculation.java:184) - 		* EP3 : 3658
[DEBUG][2016-12-06 16:51:51,920](CLBCalculation.java:187) - 		* server total traffic : 9082
[DEBUG][2016-12-06 16:51:51,920](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 16:51:51,920](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 16:51:51,920](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 16:51:51,935](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 16:51:52,013](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 16:51:52,029](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 16:51:52,029](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 16:51:52,295](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 16:51:52,295](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 16:51:52,295](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 16:51:52,295](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 16:51:52,670](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 16:51:52,670](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 16:51:52,685](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 16:51:52,685](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 16:51:52,685](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 16:51:52,701](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 17:50:59,394](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 17:51:01,159](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 17:51:26,709](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 17:51:26,772](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 17:51:49,665](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 17:51:49,758](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 17:51:49,758](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 17:51:49,758](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 17:51:49,758](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 17:51:49,758](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 17:51:49,758](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 17:51:49,758](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 17:51:49,946](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 17:51:52,150](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 17:51:52,150](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 17:51:52,165](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 17:51:52,165](CLPCalculation.java:106) - 	* number of user : 52
[INFO ][2016-12-06 17:51:52,274](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 17:51:52,274](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 17:51:52,290](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 17:51:52,290](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 17:51:52,290](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 17:51:52,290](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 17:51:52,290](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 17:51:52,290](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 17:51:52,290](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 17:51:52,306](CLBCalculation.java:184) - 		* EP1 : 3962
[DEBUG][2016-12-06 17:51:52,306](CLBCalculation.java:184) - 		* EP2 : 1212
[DEBUG][2016-12-06 17:51:52,321](CLBCalculation.java:184) - 		* EP3 : 3456
[DEBUG][2016-12-06 17:51:52,321](CLBCalculation.java:187) - 		* server total traffic : 8630
[DEBUG][2016-12-06 17:51:52,321](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 17:51:52,321](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 17:51:52,321](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 17:51:52,321](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 17:51:52,446](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 17:51:52,462](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 17:51:52,462](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 17:51:52,728](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 17:51:52,728](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 17:51:52,728](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 17:51:52,728](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 17:51:53,056](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 17:51:53,071](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 17:51:53,071](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 17:51:53,071](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 17:51:53,087](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 17:51:53,087](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 18:50:59,905](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 18:51:01,624](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 18:51:27,205](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 18:51:27,283](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 18:51:50,160](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 18:51:50,207](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 18:51:50,207](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 18:51:50,207](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 18:51:50,207](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 18:51:50,223](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 18:51:50,223](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 18:51:50,223](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 18:51:50,395](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 18:51:52,489](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 18:51:52,489](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 18:51:52,489](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 18:51:52,504](CLPCalculation.java:106) - 	* number of user : 53
[INFO ][2016-12-06 18:51:52,598](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 18:51:52,598](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 18:51:52,613](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 18:51:52,613](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 18:51:52,613](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 18:51:52,613](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 18:51:52,613](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 18:51:52,613](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 18:51:52,613](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 18:51:52,629](CLBCalculation.java:184) - 		* EP1 : 4346
[DEBUG][2016-12-06 18:51:52,629](CLBCalculation.java:184) - 		* EP2 : 1317
[DEBUG][2016-12-06 18:51:52,629](CLBCalculation.java:184) - 		* EP3 : 3780
[DEBUG][2016-12-06 18:51:52,629](CLBCalculation.java:187) - 		* server total traffic : 9443
[DEBUG][2016-12-06 18:51:52,629](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 18:51:52,645](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 18:51:52,645](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 18:51:52,645](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 18:51:52,738](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 18:51:52,738](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 18:51:52,754](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 18:51:53,004](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 18:51:53,004](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 18:51:53,004](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 18:51:53,004](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 18:51:53,364](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 18:51:53,364](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 18:51:53,364](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 18:51:53,379](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 18:51:53,379](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 18:51:53,395](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 19:51:00,385](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 19:51:01,885](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 19:51:27,872](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 19:51:27,950](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 19:51:50,624](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 19:51:50,702](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 19:51:50,702](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 19:51:50,702](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 19:51:50,702](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 19:51:50,702](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 19:51:50,718](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 19:51:50,718](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 19:51:50,921](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 19:51:53,140](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 19:51:53,156](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 19:51:53,156](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 19:51:53,172](CLPCalculation.java:106) - 	* number of user : 51
[INFO ][2016-12-06 19:51:53,296](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 19:51:53,296](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 19:51:53,312](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 19:51:53,312](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 19:51:53,312](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 19:51:53,312](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 19:51:53,312](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 19:51:53,312](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 19:51:53,312](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 19:51:53,343](CLBCalculation.java:184) - 		* EP1 : 3661
[DEBUG][2016-12-06 19:51:53,343](CLBCalculation.java:184) - 		* EP2 : 1269
[DEBUG][2016-12-06 19:51:53,343](CLBCalculation.java:184) - 		* EP3 : 3481
[DEBUG][2016-12-06 19:51:53,343](CLBCalculation.java:187) - 		* server total traffic : 8411
[DEBUG][2016-12-06 19:51:53,359](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 19:51:53,359](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 19:51:53,359](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 19:51:53,359](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 19:51:53,453](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 19:51:53,468](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 19:51:53,484](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 19:51:53,734](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 19:51:53,734](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 19:51:53,734](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 19:51:53,734](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 19:51:54,187](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 19:51:54,187](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 19:51:54,187](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 19:51:54,203](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 19:51:54,203](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 19:51:54,218](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 20:51:01,130](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 20:51:02,693](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 20:51:28,524](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 20:51:28,586](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 20:51:51,088](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 20:51:51,151](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 20:51:51,151](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 20:51:51,151](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 20:51:51,151](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 20:51:51,151](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 20:51:51,167](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 20:51:51,167](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 20:51:51,339](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 20:51:53,355](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 20:51:53,355](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 20:51:53,355](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 20:51:53,370](CLPCalculation.java:106) - 	* number of user : 52
[INFO ][2016-12-06 20:51:53,448](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 20:51:53,448](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 20:51:53,464](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 20:51:53,464](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 20:51:53,464](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 20:51:53,464](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 20:51:53,464](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 20:51:53,464](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 20:51:53,464](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 20:51:53,479](CLBCalculation.java:184) - 		* EP1 : 3562
[DEBUG][2016-12-06 20:51:53,479](CLBCalculation.java:184) - 		* EP2 : 1073
[DEBUG][2016-12-06 20:51:53,495](CLBCalculation.java:184) - 		* EP3 : 3346
[DEBUG][2016-12-06 20:51:53,495](CLBCalculation.java:187) - 		* server total traffic : 7981
[DEBUG][2016-12-06 20:51:53,495](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 20:51:53,495](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 20:51:53,495](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 20:51:53,495](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 20:51:53,573](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 20:51:53,589](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 20:51:53,589](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 20:51:53,854](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 20:51:53,854](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 20:51:53,870](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 20:51:53,870](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 20:51:54,183](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 20:51:54,183](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 20:51:54,183](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 20:51:54,198](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 20:51:54,198](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 20:51:54,198](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 21:51:01,672](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 21:51:03,094](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 21:51:29,160](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 21:51:29,222](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 21:51:51,553](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 21:51:51,615](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 21:51:51,615](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 21:51:51,615](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 21:51:51,615](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 21:51:51,615](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 21:51:51,615](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 21:51:51,615](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 21:51:51,803](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 21:51:53,537](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 21:51:53,537](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 21:51:53,553](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 21:51:53,553](CLPCalculation.java:106) - 	* number of user : 50
[INFO ][2016-12-06 21:51:53,662](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 21:51:53,678](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 21:51:53,678](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 21:51:53,678](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 21:51:53,678](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 21:51:53,678](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 21:51:53,678](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 21:51:53,678](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 21:51:53,694](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 21:51:53,694](CLBCalculation.java:184) - 		* EP1 : 3317
[DEBUG][2016-12-06 21:51:53,694](CLBCalculation.java:184) - 		* EP2 : 985
[DEBUG][2016-12-06 21:51:53,709](CLBCalculation.java:184) - 		* EP3 : 2877
[DEBUG][2016-12-06 21:51:53,709](CLBCalculation.java:187) - 		* server total traffic : 7179
[DEBUG][2016-12-06 21:51:53,709](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 21:51:53,709](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 21:51:53,709](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 21:51:53,709](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 21:51:53,787](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 21:51:53,803](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 21:51:53,819](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 21:51:54,053](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 21:51:54,053](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 21:51:54,053](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 21:51:54,069](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 21:51:54,350](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 21:51:54,350](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 21:51:54,350](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 21:51:54,365](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 21:51:54,365](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 21:51:54,365](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 22:51:02,340](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 22:51:04,012](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 22:51:29,889](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 22:51:29,968](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 22:51:52,017](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[DEBUG][2016-12-06 22:51:52,064](CLPCalculation.java:41) - # All The Monitored Data Was Received
[INFO ][2016-12-06 22:51:52,064](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 22:51:52,064](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 22:51:52,064](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 22:51:52,064](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 22:51:52,064](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 22:51:52,064](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 22:51:52,282](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 22:51:54,377](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 22:51:54,377](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 22:51:54,392](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 22:51:54,392](CLPCalculation.java:106) - 	* number of user : 54
[INFO ][2016-12-06 22:51:54,501](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 22:51:54,501](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 22:51:54,517](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 22:51:54,517](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 22:51:54,517](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 22:51:54,517](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 22:51:54,517](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 22:51:54,517](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 22:51:54,533](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 22:51:54,533](CLBCalculation.java:184) - 		* EP1 : 3997
[DEBUG][2016-12-06 22:51:54,548](CLBCalculation.java:184) - 		* EP2 : 1206
[DEBUG][2016-12-06 22:51:54,548](CLBCalculation.java:184) - 		* EP3 : 3325
[DEBUG][2016-12-06 22:51:54,548](CLBCalculation.java:187) - 		* server total traffic : 8528
[DEBUG][2016-12-06 22:51:54,548](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 22:51:54,548](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 22:51:54,548](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 22:51:54,548](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 22:51:54,658](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 22:51:54,673](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 22:51:54,673](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 22:51:54,923](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 22:51:54,923](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 22:51:54,939](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 22:51:54,939](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 22:51:55,267](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 22:51:55,267](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 22:51:55,283](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 22:51:55,283](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 22:51:55,283](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 22:51:55,298](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

[INFO ][2016-12-06 23:51:03,054](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 23:51:04,413](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 1
[INFO ][2016-12-06 23:51:30,572](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 23:51:30,635](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 2
[INFO ][2016-12-06 23:51:52,481](CConnectionWrap.java:29) - 	* Message from Entry Point : Do extracting monitored data
[INFO ][2016-12-06 23:51:52,528](CConnectionWrap.java:43) - 	* Number of Entry Point Receving Data Completely : 3
[DEBUG][2016-12-06 23:51:52,528](CLPCalculation.java:41) - # All The Monitored Data Was Received
[DEBUG][2016-12-06 23:51:52,528](CLPCalculation.java:45) - # SET EP CONNECTIION COUNTER ZERO 

[INFO ][2016-12-06 23:51:52,543](CLPCalculation.java:74) - [doMatchAlgorithm method] - Start 

[INFO ][2016-12-06 23:51:52,543](Normalization.java:21) - Normalization Start
[DEBUG][2016-12-06 23:51:52,543](CNormalizeTraffic.java:16) - Normalization of Server Traffic Start
[DEBUG][2016-12-06 23:51:52,543](CNormalizeDistance.java:15) - Normalization of Distance Start
[DEBUG][2016-12-06 23:51:52,731](CNormalizeTraffic.java:32) - Normalization of Server Traffic Was Done
[DEBUG][2016-12-06 23:51:54,731](CNormalizeDistance.java:59) - Normalization of Distance Was Done
[INFO ][2016-12-06 23:51:54,731](Normalization.java:68) - Normalization Of All Factors Were Done 

[INFO ][2016-12-06 23:51:54,731](CLPCalculation.java:97) - [calculateWeight method] - Start
[DEBUG][2016-12-06 23:51:54,747](CLPCalculation.java:106) - 	* number of user : 51
[INFO ][2016-12-06 23:51:54,809](CLPCalculation.java:153) - [calculateWeight method] - End 

[INFO ][2016-12-06 23:51:54,809](CLPCalculation.java:158) - [calculateLP method] - Start
[INFO ][2016-12-06 23:51:54,825](CLPCalculation.java:391) - [calculateLP method] - End 

[DEBUG][2016-12-06 23:51:54,825](CLBCalculation.java:18) - [CLBCalculation constructor] - Start
[DEBUG][2016-12-06 23:51:54,825](CLBCalculation.java:37) - 	* set capacity limitation of each cloud (server) using HashMap
[DEBUG][2016-12-06 23:51:54,825](CLBCalculation.java:38) - 	* current map.size() : 3
[DEBUG][2016-12-06 23:51:54,825](CLBCalculation.java:42) - [CLBCalculation constructor] - End 

[INFO ][2016-12-06 23:51:54,825](CLBCalculation.java:48) - [lbMain method] - Start
[INFO ][2016-12-06 23:51:54,825](CLBCalculation.java:178) - 	[determineProcessType method] - Start
[DEBUG][2016-12-06 23:51:54,841](CLBCalculation.java:184) - 		* EP1 : 3809
[DEBUG][2016-12-06 23:51:54,841](CLBCalculation.java:184) - 		* EP2 : 1012
[DEBUG][2016-12-06 23:51:54,841](CLBCalculation.java:184) - 		* EP3 : 3103
[DEBUG][2016-12-06 23:51:54,841](CLBCalculation.java:187) - 		* server total traffic : 7924
[DEBUG][2016-12-06 23:51:54,856](CLBCalculation.java:190) - 		* total capacity of clouds : 3.0E7
[DEBUG][2016-12-06 23:51:54,856](CLBCalculation.java:193) - 		* minimum capacity of Clouds : 1.0E7
[INFO ][2016-12-06 23:51:54,856](CLBCalculation.java:206) - 	[determineProcessType method] - End
[DEBUG][2016-12-06 23:51:54,856](CLBCalculation.java:58) - 	* MINIMUM_TRAFFIC 

[INFO ][2016-12-06 23:51:54,934](CLBCalculation.java:1069) - 	[updateBrokerGiver method] - Start
[INFO ][2016-12-06 23:51:54,950](CLBCalculation.java:1077) -  		* before update : number of user at each cloud
[INFO ][2016-12-06 23:51:54,950](CLBCalculation.java:1087) - 			EP1:914 EP2:58 EP3:1029 
[DEBUG][2016-12-06 23:51:55,200](CLBCalculation.java:1127) -  			- update count (cuz, different with the existing match): 0
[INFO ][2016-12-06 23:51:55,200](CLBCalculation.java:1132) - 		* after update : number of user at each cloud
[INFO ][2016-12-06 23:51:55,216](CLBCalculation.java:1142) - 			EP1:914 EP2:58 EP3:1029 
[INFO ][2016-12-06 23:51:55,216](CLBCalculation.java:1146) - 	[updateBrokerGiver method] - End
[INFO ][2016-12-06 23:51:55,513](CLBCalculation.java:99) - [lbMain method] - End 

[INFO ][2016-12-06 23:51:55,513](CLPCalculation.java:92) - [doMatchAlgorithm method] - End 

[INFO ][2016-12-06 23:51:55,528](CLPCalculation.java:27) - ****************************************************************************************
[INFO ][2016-12-06 23:51:55,544](CLPCalculation.java:28) - ********************************* Broker routine START *********************************
[INFO ][2016-12-06 23:51:55,544](CLPCalculation.java:29) - **************************************************************************************** 

[INFO ][2016-12-06 23:51:55,544](CLPCalculation.java:34) - Initialize dynamic table (normalized_distance_table) 

